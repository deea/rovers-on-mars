{
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/test/test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/test/test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/test/test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/test/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/test",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _assert = _interopRequireDefault(require(\"assert\"));\n\nvar _Rover = _interopRequireDefault(require(\"../src/Rover\"));\n\nvar _Platform = _interopRequireDefault(require(\"../src/Platform\"));\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\ndescribe('Platform', function () {\n  it('should create a Platform with the correct properties', function () {\n    var platform = new _Platform[\"default\"](5, 5);\n\n    _assert[\"default\"].deepEqual([platform.x, platform.y], [5, 5]);\n  });\n  it('should throw an error if Platform coordinate are <= to 0', function () {\n    _chai[\"default\"].expect(function () {\n      return new _Platform[\"default\"](-1, -1);\n    }).to[\"throw\"]('Coordinates need to be greater than 0');\n  });\n  it('should create Rovers on Platfrom', function () {\n    var rover1 = new _Rover[\"default\"](1, 2, 'N');\n    var rover2 = new _Rover[\"default\"](3, 3, 'E');\n    var platform = new _Platform[\"default\"](5, 5);\n    platform.addRover(rover1);\n    platform.addRover(rover2);\n\n    _assert[\"default\"].deepEqual([platform.x, platform.y, platform.rovers], [5, 5, [rover1, rover2]]);\n  });\n  it('should return true if outside the Platform', function () {\n    var platform = new _Platform[\"default\"](1, 1);\n    platform.isOutside(1, 2);\n\n    _assert[\"default\"].equal(true, platform.isOutside(1, 2));\n  });\n});\ndescribe('Rover', function () {\n  it('should create a Rover with the correct properties', function () {\n    var rover1 = new _Rover[\"default\"](1, 2, 'N', '');\n    var rover2 = new _Rover[\"default\"](3, 3, 'E', '');\n\n    _assert[\"default\"].deepEqual([rover1.x, rover1.y, rover1.o], [1, 2, 'N']);\n\n    _assert[\"default\"].deepEqual([rover2.x, rover2.y, rover2.o], [3, 3, 'E']);\n  });\n});\ndescribe('Rover', function () {\n  it('should move a Rover according to the instructions', function () {\n    var rover1 = new _Rover[\"default\"](1, 2, 'N', 'LMLMLMLMM'.split(''));\n    var rover2 = new _Rover[\"default\"](3, 3, 'E', 'MMRMMRMRRM'.split(''));\n    var platform = new _Platform[\"default\"](5, 5);\n    platform.addRover(rover1);\n    platform.addRover(rover2);\n    platform.moveRovers();\n\n    _assert[\"default\"].deepEqual([rover1.x, rover1.y, rover1.o], [1, 3, 'N']);\n\n    _assert[\"default\"].deepEqual([rover2.x, rover2.y, rover2.o], [5, 1, 'E']);\n  });\n  it(\"should not be able to go over the 'N' Platform limits\", function () {\n    var rover = new _Rover[\"default\"](1, 2, 'N', 'MMMMMMMM'.split(''));\n    var platform = new _Platform[\"default\"](3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n\n    _assert[\"default\"].equal(rover.y, 3);\n  });\n  it(\"should not be able to go over the 'W' Platform limits\", function () {\n    var rover = new _Rover[\"default\"](1, 2, 'N', 'LMMMMMMM'.split(''));\n    var platform = new _Platform[\"default\"](3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n\n    _assert[\"default\"].equal(rover.x, 0);\n  });\n  it(\"should not be able to go over the 'S' Platform limits\", function () {\n    var rover = new _Rover[\"default\"](1, 2, 'N', 'LLMMMMMM'.split(''));\n    var platform = new _Platform[\"default\"](3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n\n    _assert[\"default\"].equal(rover.y, 0);\n  });\n  it(\"should not be able to go over the 'E' Platform limits\", function () {\n    var rover = new _Rover[\"default\"](1, 2, 'N', 'RMMMMMMM'.split(''));\n    var platform = new _Platform[\"default\"](3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n\n    _assert[\"default\"].equal(rover.x, 3);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsInBsYXRmb3JtIiwiUGxhdGZvcm0iLCJhc3NlcnQiLCJkZWVwRXF1YWwiLCJ4IiwieSIsImNoYWkiLCJleHBlY3QiLCJ0byIsInJvdmVyMSIsIlJvdmVyIiwicm92ZXIyIiwiYWRkUm92ZXIiLCJyb3ZlcnMiLCJpc091dHNpZGUiLCJlcXVhbCIsIm8iLCJzcGxpdCIsIm1vdmVSb3ZlcnMiLCJyb3ZlciJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUdBQSxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQVc7QUFDOUJDLEVBQUFBLEVBQUUsQ0FBQyxzREFBRCxFQUF5RCxZQUFXO0FBQ3BFLFFBQU1DLFFBQVEsR0FBRyxJQUFJQyxvQkFBSixDQUFhLENBQWIsRUFBZ0IsQ0FBaEIsQ0FBakI7O0FBQ0FDLHVCQUFPQyxTQUFQLENBQWlCLENBQUNILFFBQVEsQ0FBQ0ksQ0FBVixFQUFhSixRQUFRLENBQUNLLENBQXRCLENBQWpCLEVBQTJDLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBM0M7QUFDRCxHQUhDLENBQUY7QUFJQU4sRUFBQUEsRUFBRSxDQUFDLDBEQUFELEVBQTZELFlBQVc7QUFDeEVPLHFCQUFLQyxNQUFMLENBQVk7QUFBQSxhQUFNLElBQUlOLG9CQUFKLENBQWEsQ0FBQyxDQUFkLEVBQWlCLENBQUMsQ0FBbEIsQ0FBTjtBQUFBLEtBQVosRUFBd0NPLEVBQXhDLFVBQWlELHVDQUFqRDtBQUNELEdBRkMsQ0FBRjtBQUdBVCxFQUFBQSxFQUFFLENBQUMsa0NBQUQsRUFBcUMsWUFBVztBQUNoRCxRQUFNVSxNQUFNLEdBQUcsSUFBSUMsaUJBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixHQUFoQixDQUFmO0FBQ0EsUUFBTUMsTUFBTSxHQUFHLElBQUlELGlCQUFKLENBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsR0FBaEIsQ0FBZjtBQUNBLFFBQU1WLFFBQVEsR0FBRyxJQUFJQyxvQkFBSixDQUFhLENBQWIsRUFBZ0IsQ0FBaEIsQ0FBakI7QUFDQUQsSUFBQUEsUUFBUSxDQUFDWSxRQUFULENBQWtCSCxNQUFsQjtBQUNBVCxJQUFBQSxRQUFRLENBQUNZLFFBQVQsQ0FBa0JELE1BQWxCOztBQUNBVCx1QkFBT0MsU0FBUCxDQUFpQixDQUFDSCxRQUFRLENBQUNJLENBQVYsRUFBYUosUUFBUSxDQUFDSyxDQUF0QixFQUF5QkwsUUFBUSxDQUFDYSxNQUFsQyxDQUFqQixFQUE0RCxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBQ0osTUFBRCxFQUFTRSxNQUFULENBQVAsQ0FBNUQ7QUFDRCxHQVBDLENBQUY7QUFRQVosRUFBQUEsRUFBRSxDQUFDLDRDQUFELEVBQStDLFlBQVc7QUFDMUQsUUFBTUMsUUFBUSxHQUFHLElBQUlDLG9CQUFKLENBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFqQjtBQUNBRCxJQUFBQSxRQUFRLENBQUNjLFNBQVQsQ0FBbUIsQ0FBbkIsRUFBc0IsQ0FBdEI7O0FBQ0FaLHVCQUFPYSxLQUFQLENBQWEsSUFBYixFQUFtQmYsUUFBUSxDQUFDYyxTQUFULENBQW1CLENBQW5CLEVBQXNCLENBQXRCLENBQW5CO0FBQ0QsR0FKQyxDQUFGO0FBS0QsQ0FyQk8sQ0FBUjtBQXVCQWhCLFFBQVEsQ0FBQyxPQUFELEVBQVUsWUFBVztBQUMzQkMsRUFBQUEsRUFBRSxDQUFDLG1EQUFELEVBQXNELFlBQVc7QUFDakUsUUFBTVUsTUFBTSxHQUFHLElBQUlDLGlCQUFKLENBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsR0FBaEIsRUFBcUIsRUFBckIsQ0FBZjtBQUNBLFFBQU1DLE1BQU0sR0FBRyxJQUFJRCxpQkFBSixDQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLEdBQWhCLEVBQXFCLEVBQXJCLENBQWY7O0FBQ0FSLHVCQUFPQyxTQUFQLENBQWlCLENBQUNNLE1BQU0sQ0FBQ0wsQ0FBUixFQUFXSyxNQUFNLENBQUNKLENBQWxCLEVBQXFCSSxNQUFNLENBQUNPLENBQTVCLENBQWpCLEVBQWlELENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxHQUFQLENBQWpEOztBQUNBZCx1QkFBT0MsU0FBUCxDQUFpQixDQUFDUSxNQUFNLENBQUNQLENBQVIsRUFBV08sTUFBTSxDQUFDTixDQUFsQixFQUFxQk0sTUFBTSxDQUFDSyxDQUE1QixDQUFqQixFQUFpRCxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sR0FBUCxDQUFqRDtBQUNELEdBTEMsQ0FBRjtBQU1ELENBUE8sQ0FBUjtBQVNBbEIsUUFBUSxDQUFDLE9BQUQsRUFBVSxZQUFXO0FBQzNCQyxFQUFBQSxFQUFFLENBQUMsbURBQUQsRUFBc0QsWUFBVztBQUNqRSxRQUFNVSxNQUFNLEdBQUcsSUFBSUMsaUJBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixHQUFoQixFQUFxQixZQUFZTyxLQUFaLENBQWtCLEVBQWxCLENBQXJCLENBQWY7QUFDQSxRQUFNTixNQUFNLEdBQUcsSUFBSUQsaUJBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixHQUFoQixFQUFxQixhQUFhTyxLQUFiLENBQW1CLEVBQW5CLENBQXJCLENBQWY7QUFDQSxRQUFNakIsUUFBUSxHQUFHLElBQUlDLG9CQUFKLENBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFqQjtBQUNBRCxJQUFBQSxRQUFRLENBQUNZLFFBQVQsQ0FBa0JILE1BQWxCO0FBQ0FULElBQUFBLFFBQVEsQ0FBQ1ksUUFBVCxDQUFrQkQsTUFBbEI7QUFDQVgsSUFBQUEsUUFBUSxDQUFDa0IsVUFBVDs7QUFDQWhCLHVCQUFPQyxTQUFQLENBQWlCLENBQUNNLE1BQU0sQ0FBQ0wsQ0FBUixFQUFXSyxNQUFNLENBQUNKLENBQWxCLEVBQXFCSSxNQUFNLENBQUNPLENBQTVCLENBQWpCLEVBQWlELENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxHQUFQLENBQWpEOztBQUNBZCx1QkFBT0MsU0FBUCxDQUFpQixDQUFDUSxNQUFNLENBQUNQLENBQVIsRUFBV08sTUFBTSxDQUFDTixDQUFsQixFQUFxQk0sTUFBTSxDQUFDSyxDQUE1QixDQUFqQixFQUFpRCxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sR0FBUCxDQUFqRDtBQUNELEdBVEMsQ0FBRjtBQVVBakIsRUFBQUEsRUFBRSxDQUFDLHVEQUFELEVBQTBELFlBQVc7QUFDckUsUUFBTW9CLEtBQUssR0FBRyxJQUFJVCxpQkFBSixDQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLEdBQWhCLEVBQXFCLFdBQVdPLEtBQVgsQ0FBaUIsRUFBakIsQ0FBckIsQ0FBZDtBQUNBLFFBQU1qQixRQUFRLEdBQUcsSUFBSUMsb0JBQUosQ0FBYSxDQUFiLEVBQWdCLENBQWhCLENBQWpCO0FBQ0FELElBQUFBLFFBQVEsQ0FBQ1ksUUFBVCxDQUFrQk8sS0FBbEI7QUFDQW5CLElBQUFBLFFBQVEsQ0FBQ2tCLFVBQVQ7O0FBQ0FoQix1QkFBT2EsS0FBUCxDQUFhSSxLQUFLLENBQUNkLENBQW5CLEVBQXNCLENBQXRCO0FBQ0QsR0FOQyxDQUFGO0FBT0FOLEVBQUFBLEVBQUUsQ0FBQyx1REFBRCxFQUEwRCxZQUFXO0FBQ3JFLFFBQU1vQixLQUFLLEdBQUcsSUFBSVQsaUJBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixHQUFoQixFQUFxQixXQUFXTyxLQUFYLENBQWlCLEVBQWpCLENBQXJCLENBQWQ7QUFDQSxRQUFNakIsUUFBUSxHQUFHLElBQUlDLG9CQUFKLENBQWEsQ0FBYixFQUFnQixDQUFoQixDQUFqQjtBQUNBRCxJQUFBQSxRQUFRLENBQUNZLFFBQVQsQ0FBa0JPLEtBQWxCO0FBQ0FuQixJQUFBQSxRQUFRLENBQUNrQixVQUFUOztBQUNBaEIsdUJBQU9hLEtBQVAsQ0FBYUksS0FBSyxDQUFDZixDQUFuQixFQUFzQixDQUF0QjtBQUNELEdBTkMsQ0FBRjtBQU9BTCxFQUFBQSxFQUFFLENBQUMsdURBQUQsRUFBMEQsWUFBVztBQUNyRSxRQUFNb0IsS0FBSyxHQUFHLElBQUlULGlCQUFKLENBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsR0FBaEIsRUFBcUIsV0FBV08sS0FBWCxDQUFpQixFQUFqQixDQUFyQixDQUFkO0FBQ0EsUUFBTWpCLFFBQVEsR0FBRyxJQUFJQyxvQkFBSixDQUFhLENBQWIsRUFBZ0IsQ0FBaEIsQ0FBakI7QUFDQUQsSUFBQUEsUUFBUSxDQUFDWSxRQUFULENBQWtCTyxLQUFsQjtBQUNBbkIsSUFBQUEsUUFBUSxDQUFDa0IsVUFBVDs7QUFDQWhCLHVCQUFPYSxLQUFQLENBQWFJLEtBQUssQ0FBQ2QsQ0FBbkIsRUFBc0IsQ0FBdEI7QUFDRCxHQU5DLENBQUY7QUFPQU4sRUFBQUEsRUFBRSxDQUFDLHVEQUFELEVBQTBELFlBQVc7QUFDckUsUUFBTW9CLEtBQUssR0FBRyxJQUFJVCxpQkFBSixDQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCLEdBQWhCLEVBQXFCLFdBQVdPLEtBQVgsQ0FBaUIsRUFBakIsQ0FBckIsQ0FBZDtBQUNBLFFBQU1qQixRQUFRLEdBQUcsSUFBSUMsb0JBQUosQ0FBYSxDQUFiLEVBQWdCLENBQWhCLENBQWpCO0FBQ0FELElBQUFBLFFBQVEsQ0FBQ1ksUUFBVCxDQUFrQk8sS0FBbEI7QUFDQW5CLElBQUFBLFFBQVEsQ0FBQ2tCLFVBQVQ7O0FBQ0FoQix1QkFBT2EsS0FBUCxDQUFhSSxLQUFLLENBQUNmLENBQW5CLEVBQXNCLENBQXRCO0FBQ0QsR0FOQyxDQUFGO0FBT0QsQ0F2Q08sQ0FBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kZWVhL2NvZGUvZGVlYS9Qcm9qZWN0cy90aG91Z2h0LXdvcmtzL3Rlc3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gJ2Fzc2VydCc7XG5pbXBvcnQgUm92ZXIgZnJvbSAnLi4vc3JjL1JvdmVyJztcbmltcG9ydCBQbGF0Zm9ybSBmcm9tICcuLi9zcmMvUGxhdGZvcm0nO1xuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5cblxuZGVzY3JpYmUoJ1BsYXRmb3JtJywgZnVuY3Rpb24oKSB7XG4gIGl0KCdzaG91bGQgY3JlYXRlIGEgUGxhdGZvcm0gd2l0aCB0aGUgY29ycmVjdCBwcm9wZXJ0aWVzJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcGxhdGZvcm0gPSBuZXcgUGxhdGZvcm0oNSwgNSk7XG4gICAgYXNzZXJ0LmRlZXBFcXVhbChbcGxhdGZvcm0ueCwgcGxhdGZvcm0ueV0sIFs1LCA1XSk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHRocm93IGFuIGVycm9yIGlmIFBsYXRmb3JtIGNvb3JkaW5hdGUgYXJlIDw9IHRvIDAnLCBmdW5jdGlvbigpIHtcbiAgICBjaGFpLmV4cGVjdCgoKSA9PiBuZXcgUGxhdGZvcm0oLTEsIC0xKSkudG8udGhyb3coJ0Nvb3JkaW5hdGVzIG5lZWQgdG8gYmUgZ3JlYXRlciB0aGFuIDAnKTtcbiAgfSlcbiAgaXQoJ3Nob3VsZCBjcmVhdGUgUm92ZXJzIG9uIFBsYXRmcm9tJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3Qgcm92ZXIxID0gbmV3IFJvdmVyKDEsIDIsICdOJyk7XG4gICAgY29uc3Qgcm92ZXIyID0gbmV3IFJvdmVyKDMsIDMsICdFJyk7XG4gICAgY29uc3QgcGxhdGZvcm0gPSBuZXcgUGxhdGZvcm0oNSwgNSk7XG4gICAgcGxhdGZvcm0uYWRkUm92ZXIocm92ZXIxKTtcbiAgICBwbGF0Zm9ybS5hZGRSb3Zlcihyb3ZlcjIpO1xuICAgIGFzc2VydC5kZWVwRXF1YWwoW3BsYXRmb3JtLngsIHBsYXRmb3JtLnksIHBsYXRmb3JtLnJvdmVyc10sIFs1LCA1LCBbcm92ZXIxLCByb3ZlcjJdXSk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHJldHVybiB0cnVlIGlmIG91dHNpZGUgdGhlIFBsYXRmb3JtJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcGxhdGZvcm0gPSBuZXcgUGxhdGZvcm0oMSwgMSk7XG4gICAgcGxhdGZvcm0uaXNPdXRzaWRlKDEsIDIpO1xuICAgIGFzc2VydC5lcXVhbCh0cnVlLCBwbGF0Zm9ybS5pc091dHNpZGUoMSwgMikpO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnUm92ZXInLCBmdW5jdGlvbigpIHtcbiAgaXQoJ3Nob3VsZCBjcmVhdGUgYSBSb3ZlciB3aXRoIHRoZSBjb3JyZWN0IHByb3BlcnRpZXMnLCBmdW5jdGlvbigpIHtcbiAgICBjb25zdCByb3ZlcjEgPSBuZXcgUm92ZXIoMSwgMiwgJ04nLCAnJyk7XG4gICAgY29uc3Qgcm92ZXIyID0gbmV3IFJvdmVyKDMsIDMsICdFJywgJycpO1xuICAgIGFzc2VydC5kZWVwRXF1YWwoW3JvdmVyMS54LCByb3ZlcjEueSwgcm92ZXIxLm9dLCBbMSwgMiwgJ04nXSk7XG4gICAgYXNzZXJ0LmRlZXBFcXVhbChbcm92ZXIyLngsIHJvdmVyMi55LCByb3ZlcjIub10sIFszLCAzLCAnRSddKTtcbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ1JvdmVyJywgZnVuY3Rpb24oKSB7XG4gIGl0KCdzaG91bGQgbW92ZSBhIFJvdmVyIGFjY29yZGluZyB0byB0aGUgaW5zdHJ1Y3Rpb25zJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc3Qgcm92ZXIxID0gbmV3IFJvdmVyKDEsIDIsICdOJywgJ0xNTE1MTUxNTScuc3BsaXQoJycpKTtcbiAgICBjb25zdCByb3ZlcjIgPSBuZXcgUm92ZXIoMywgMywgJ0UnLCAnTU1STU1STVJSTScuc3BsaXQoJycpKTtcbiAgICBjb25zdCBwbGF0Zm9ybSA9IG5ldyBQbGF0Zm9ybSg1LCA1KTtcbiAgICBwbGF0Zm9ybS5hZGRSb3Zlcihyb3ZlcjEpO1xuICAgIHBsYXRmb3JtLmFkZFJvdmVyKHJvdmVyMik7XG4gICAgcGxhdGZvcm0ubW92ZVJvdmVycygpO1xuICAgIGFzc2VydC5kZWVwRXF1YWwoW3JvdmVyMS54LCByb3ZlcjEueSwgcm92ZXIxLm9dLCBbMSwgMywgJ04nXSk7XG4gICAgYXNzZXJ0LmRlZXBFcXVhbChbcm92ZXIyLngsIHJvdmVyMi55LCByb3ZlcjIub10sIFs1LCAxLCAnRSddKTtcbiAgfSk7XG4gIGl0KFwic2hvdWxkIG5vdCBiZSBhYmxlIHRvIGdvIG92ZXIgdGhlICdOJyBQbGF0Zm9ybSBsaW1pdHNcIiwgZnVuY3Rpb24oKSB7XG4gICAgY29uc3Qgcm92ZXIgPSBuZXcgUm92ZXIoMSwgMiwgJ04nLCAnTU1NTU1NTU0nLnNwbGl0KCcnKSlcbiAgICBjb25zdCBwbGF0Zm9ybSA9IG5ldyBQbGF0Zm9ybSgzLCAzKTtcbiAgICBwbGF0Zm9ybS5hZGRSb3Zlcihyb3Zlcik7XG4gICAgcGxhdGZvcm0ubW92ZVJvdmVycygpO1xuICAgIGFzc2VydC5lcXVhbChyb3Zlci55LCAzKVxuICB9KTtcbiAgaXQoXCJzaG91bGQgbm90IGJlIGFibGUgdG8gZ28gb3ZlciB0aGUgJ1cnIFBsYXRmb3JtIGxpbWl0c1wiLCBmdW5jdGlvbigpIHtcbiAgICBjb25zdCByb3ZlciA9IG5ldyBSb3ZlcigxLCAyLCAnTicsICdMTU1NTU1NTScuc3BsaXQoJycpKVxuICAgIGNvbnN0IHBsYXRmb3JtID0gbmV3IFBsYXRmb3JtKDMsIDMpO1xuICAgIHBsYXRmb3JtLmFkZFJvdmVyKHJvdmVyKTtcbiAgICBwbGF0Zm9ybS5tb3ZlUm92ZXJzKCk7XG4gICAgYXNzZXJ0LmVxdWFsKHJvdmVyLngsIDApXG4gIH0pO1xuICBpdChcInNob3VsZCBub3QgYmUgYWJsZSB0byBnbyBvdmVyIHRoZSAnUycgUGxhdGZvcm0gbGltaXRzXCIsIGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHJvdmVyID0gbmV3IFJvdmVyKDEsIDIsICdOJywgJ0xMTU1NTU1NJy5zcGxpdCgnJykpXG4gICAgY29uc3QgcGxhdGZvcm0gPSBuZXcgUGxhdGZvcm0oMywgMyk7XG4gICAgcGxhdGZvcm0uYWRkUm92ZXIocm92ZXIpO1xuICAgIHBsYXRmb3JtLm1vdmVSb3ZlcnMoKTtcbiAgICBhc3NlcnQuZXF1YWwocm92ZXIueSwgMClcbiAgfSk7XG4gIGl0KFwic2hvdWxkIG5vdCBiZSBhYmxlIHRvIGdvIG92ZXIgdGhlICdFJyBQbGF0Zm9ybSBsaW1pdHNcIiwgZnVuY3Rpb24oKSB7XG4gICAgY29uc3Qgcm92ZXIgPSBuZXcgUm92ZXIoMSwgMiwgJ04nLCAnUk1NTU1NTU0nLnNwbGl0KCcnKSlcbiAgICBjb25zdCBwbGF0Zm9ybSA9IG5ldyBQbGF0Zm9ybSgzLCAzKTtcbiAgICBwbGF0Zm9ybS5hZGRSb3Zlcihyb3Zlcik7XG4gICAgcGxhdGZvcm0ubW92ZVJvdmVycygpO1xuICAgIGFzc2VydC5lcXVhbChyb3Zlci54LCAzKVxuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "describe",
        "it",
        "platform",
        "Platform",
        "assert",
        "deepEqual",
        "x",
        "y",
        "chai",
        "expect",
        "to",
        "rover1",
        "Rover",
        "rover2",
        "addRover",
        "rovers",
        "isOutside",
        "equal",
        "o",
        "split",
        "moveRovers",
        "rover"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AAGAA,QAAQ,CAAC,UAAD,EAAa,YAAW;AAC9BC,EAAAA,EAAE,CAAC,sDAAD,EAAyD,YAAW;AACpE,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;;AACAC,uBAAOC,SAAP,CAAiB,CAACH,QAAQ,CAACI,CAAV,EAAaJ,QAAQ,CAACK,CAAtB,CAAjB,EAA2C,CAAC,CAAD,EAAI,CAAJ,CAA3C;AACD,GAHC,CAAF;AAIAN,EAAAA,EAAE,CAAC,0DAAD,EAA6D,YAAW;AACxEO,qBAAKC,MAAL,CAAY;AAAA,aAAM,IAAIN,oBAAJ,CAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,CAAN;AAAA,KAAZ,EAAwCO,EAAxC,UAAiD,uCAAjD;AACD,GAFC,CAAF;AAGAT,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAW;AAChD,QAAMU,MAAM,GAAG,IAAIC,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,CAAf;AACA,QAAMC,MAAM,GAAG,IAAID,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,CAAf;AACA,QAAMV,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBH,MAAlB;AACAT,IAAAA,QAAQ,CAACY,QAAT,CAAkBD,MAAlB;;AACAT,uBAAOC,SAAP,CAAiB,CAACH,QAAQ,CAACI,CAAV,EAAaJ,QAAQ,CAACK,CAAtB,EAAyBL,QAAQ,CAACa,MAAlC,CAAjB,EAA4D,CAAC,CAAD,EAAI,CAAJ,EAAO,CAACJ,MAAD,EAASE,MAAT,CAAP,CAA5D;AACD,GAPC,CAAF;AAQAZ,EAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAW;AAC1D,QAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACc,SAAT,CAAmB,CAAnB,EAAsB,CAAtB;;AACAZ,uBAAOa,KAAP,CAAa,IAAb,EAAmBf,QAAQ,CAACc,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAnB;AACD,GAJC,CAAF;AAKD,CArBO,CAAR;AAuBAhB,QAAQ,CAAC,OAAD,EAAU,YAAW;AAC3BC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAW;AACjE,QAAMU,MAAM,GAAG,IAAIC,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CAAf;AACA,QAAMC,MAAM,GAAG,IAAID,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,EAArB,CAAf;;AACAR,uBAAOC,SAAP,CAAiB,CAACM,MAAM,CAACL,CAAR,EAAWK,MAAM,CAACJ,CAAlB,EAAqBI,MAAM,CAACO,CAA5B,CAAjB,EAAiD,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAjD;;AACAd,uBAAOC,SAAP,CAAiB,CAACQ,MAAM,CAACP,CAAR,EAAWO,MAAM,CAACN,CAAlB,EAAqBM,MAAM,CAACK,CAA5B,CAAjB,EAAiD,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAjD;AACD,GALC,CAAF;AAMD,CAPO,CAAR;AASAlB,QAAQ,CAAC,OAAD,EAAU,YAAW;AAC3BC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAW;AACjE,QAAMU,MAAM,GAAG,IAAIC,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,YAAYO,KAAZ,CAAkB,EAAlB,CAArB,CAAf;AACA,QAAMN,MAAM,GAAG,IAAID,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,aAAaO,KAAb,CAAmB,EAAnB,CAArB,CAAf;AACA,QAAMjB,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBH,MAAlB;AACAT,IAAAA,QAAQ,CAACY,QAAT,CAAkBD,MAAlB;AACAX,IAAAA,QAAQ,CAACkB,UAAT;;AACAhB,uBAAOC,SAAP,CAAiB,CAACM,MAAM,CAACL,CAAR,EAAWK,MAAM,CAACJ,CAAlB,EAAqBI,MAAM,CAACO,CAA5B,CAAjB,EAAiD,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAjD;;AACAd,uBAAOC,SAAP,CAAiB,CAACQ,MAAM,CAACP,CAAR,EAAWO,MAAM,CAACN,CAAlB,EAAqBM,MAAM,CAACK,CAA5B,CAAjB,EAAiD,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAjD;AACD,GATC,CAAF;AAUAjB,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAW;AACrE,QAAMoB,KAAK,GAAG,IAAIT,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,WAAWO,KAAX,CAAiB,EAAjB,CAArB,CAAd;AACA,QAAMjB,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBO,KAAlB;AACAnB,IAAAA,QAAQ,CAACkB,UAAT;;AACAhB,uBAAOa,KAAP,CAAaI,KAAK,CAACd,CAAnB,EAAsB,CAAtB;AACD,GANC,CAAF;AAOAN,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAW;AACrE,QAAMoB,KAAK,GAAG,IAAIT,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,WAAWO,KAAX,CAAiB,EAAjB,CAArB,CAAd;AACA,QAAMjB,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBO,KAAlB;AACAnB,IAAAA,QAAQ,CAACkB,UAAT;;AACAhB,uBAAOa,KAAP,CAAaI,KAAK,CAACf,CAAnB,EAAsB,CAAtB;AACD,GANC,CAAF;AAOAL,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAW;AACrE,QAAMoB,KAAK,GAAG,IAAIT,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,WAAWO,KAAX,CAAiB,EAAjB,CAArB,CAAd;AACA,QAAMjB,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBO,KAAlB;AACAnB,IAAAA,QAAQ,CAACkB,UAAT;;AACAhB,uBAAOa,KAAP,CAAaI,KAAK,CAACd,CAAnB,EAAsB,CAAtB;AACD,GANC,CAAF;AAOAN,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAW;AACrE,QAAMoB,KAAK,GAAG,IAAIT,iBAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,WAAWO,KAAX,CAAiB,EAAjB,CAArB,CAAd;AACA,QAAMjB,QAAQ,GAAG,IAAIC,oBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;AACAD,IAAAA,QAAQ,CAACY,QAAT,CAAkBO,KAAlB;AACAnB,IAAAA,QAAQ,CAACkB,UAAT;;AACAhB,uBAAOa,KAAP,CAAaI,KAAK,CAACf,CAAnB,EAAsB,CAAtB;AACD,GANC,CAAF;AAOD,CAvCO,CAAR",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/test",
      "sourcesContent": [
        "import assert from 'assert';\nimport Rover from '../src/Rover';\nimport Platform from '../src/Platform';\nimport chai from 'chai';\n\n\ndescribe('Platform', function() {\n  it('should create a Platform with the correct properties', function() {\n    const platform = new Platform(5, 5);\n    assert.deepEqual([platform.x, platform.y], [5, 5]);\n  });\n  it('should throw an error if Platform coordinate are <= to 0', function() {\n    chai.expect(() => new Platform(-1, -1)).to.throw('Coordinates need to be greater than 0');\n  })\n  it('should create Rovers on Platfrom', function() {\n    const rover1 = new Rover(1, 2, 'N');\n    const rover2 = new Rover(3, 3, 'E');\n    const platform = new Platform(5, 5);\n    platform.addRover(rover1);\n    platform.addRover(rover2);\n    assert.deepEqual([platform.x, platform.y, platform.rovers], [5, 5, [rover1, rover2]]);\n  });\n  it('should return true if outside the Platform', function() {\n    const platform = new Platform(1, 1);\n    platform.isOutside(1, 2);\n    assert.equal(true, platform.isOutside(1, 2));\n  });\n});\n\ndescribe('Rover', function() {\n  it('should create a Rover with the correct properties', function() {\n    const rover1 = new Rover(1, 2, 'N', '');\n    const rover2 = new Rover(3, 3, 'E', '');\n    assert.deepEqual([rover1.x, rover1.y, rover1.o], [1, 2, 'N']);\n    assert.deepEqual([rover2.x, rover2.y, rover2.o], [3, 3, 'E']);\n  });\n});\n\ndescribe('Rover', function() {\n  it('should move a Rover according to the instructions', function() {\n    const rover1 = new Rover(1, 2, 'N', 'LMLMLMLMM'.split(''));\n    const rover2 = new Rover(3, 3, 'E', 'MMRMMRMRRM'.split(''));\n    const platform = new Platform(5, 5);\n    platform.addRover(rover1);\n    platform.addRover(rover2);\n    platform.moveRovers();\n    assert.deepEqual([rover1.x, rover1.y, rover1.o], [1, 3, 'N']);\n    assert.deepEqual([rover2.x, rover2.y, rover2.o], [5, 1, 'E']);\n  });\n  it(\"should not be able to go over the 'N' Platform limits\", function() {\n    const rover = new Rover(1, 2, 'N', 'MMMMMMMM'.split(''))\n    const platform = new Platform(3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n    assert.equal(rover.y, 3)\n  });\n  it(\"should not be able to go over the 'W' Platform limits\", function() {\n    const rover = new Rover(1, 2, 'N', 'LMMMMMMM'.split(''))\n    const platform = new Platform(3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n    assert.equal(rover.x, 0)\n  });\n  it(\"should not be able to go over the 'S' Platform limits\", function() {\n    const rover = new Rover(1, 2, 'N', 'LLMMMMMM'.split(''))\n    const platform = new Platform(3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n    assert.equal(rover.y, 0)\n  });\n  it(\"should not be able to go over the 'E' Platform limits\", function() {\n    const rover = new Rover(1, 2, 'N', 'RMMMMMMM'.split(''))\n    const platform = new Platform(3, 3);\n    platform.addRover(rover);\n    platform.moveRovers();\n    assert.equal(rover.x, 3)\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574635492403
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/Rover.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
        "sourceFileName": "Rover.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Rover =\n/*#__PURE__*/\nfunction () {\n  function Rover(x, y, o) {\n    var instructions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    (0, _classCallCheck2[\"default\"])(this, Rover);\n    this.x = x;\n    this.y = y;\n    this.o = o;\n    this.setInstructions(instructions);\n  }\n\n  (0, _createClass2[\"default\"])(Rover, [{\n    key: \"setInstructions\",\n    value: function setInstructions(instructions) {\n      this.commands = instructions;\n    }\n  }, {\n    key: \"moves\",\n    value: function moves(platform) {\n      var _this = this;\n\n      this.commands.forEach(function (command) {\n        switch (command) {\n          case 'L':\n            _this.turnLeft();\n\n            break;\n\n          case 'R':\n            _this.turnRight();\n\n            break;\n\n          case 'M':\n            _this.moveForward(platform);\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"turnLeft\",\n    value: function turnLeft() {\n      switch (this.o) {\n        case 'N':\n          this.o = 'W';\n          break;\n\n        case 'E':\n          this.o = 'N';\n          break;\n\n        case 'S':\n          this.o = 'E';\n          break;\n\n        case 'W':\n          this.o = 'S';\n          break;\n      }\n    }\n  }, {\n    key: \"turnRight\",\n    value: function turnRight() {\n      switch (this.o) {\n        case 'N':\n          this.o = 'E';\n          break;\n\n        case 'E':\n          this.o = 'S';\n          break;\n\n        case 'S':\n          this.o = 'W';\n          break;\n\n        case 'W':\n          this.o = 'N';\n          break;\n      }\n    }\n  }, {\n    key: \"moveForward\",\n    value: function moveForward(platform) {\n      switch (this.o) {\n        case 'N':\n          this.y = Math.min(this.y + 1, platform.y);\n          break;\n\n        case 'E':\n          this.x = Math.min(this.x + 1, platform.x);\n          break;\n\n        case 'S':\n          this.y = Math.max(this.y - 1, 0);\n          break;\n\n        case 'W':\n          this.x = Math.max(this.x - 1, 0);\n          break;\n      }\n    }\n  }]);\n  return Rover;\n}();\n\nvar _default = Rover;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdmVyLmpzIl0sIm5hbWVzIjpbIlJvdmVyIiwieCIsInkiLCJvIiwiaW5zdHJ1Y3Rpb25zIiwic2V0SW5zdHJ1Y3Rpb25zIiwiY29tbWFuZHMiLCJwbGF0Zm9ybSIsImZvckVhY2giLCJjb21tYW5kIiwidHVybkxlZnQiLCJ0dXJuUmlnaHQiLCJtb3ZlRm9yd2FyZCIsIk1hdGgiLCJtaW4iLCJtYXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsSzs7O0FBQ0osaUJBQVlDLENBQVosRUFBZUMsQ0FBZixFQUFrQkMsQ0FBbEIsRUFBd0M7QUFBQSxRQUFuQkMsWUFBbUIsdUVBQUosRUFBSTtBQUFBO0FBQ3RDLFNBQUtILENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtFLGVBQUwsQ0FBcUJELFlBQXJCO0FBQ0Q7Ozs7b0NBRWVBLFksRUFBYztBQUM1QixXQUFLRSxRQUFMLEdBQWdCRixZQUFoQjtBQUNEOzs7MEJBRUtHLFEsRUFBVTtBQUFBOztBQUNkLFdBQUtELFFBQUwsQ0FBY0UsT0FBZCxDQUFzQixVQUFDQyxPQUFELEVBQWE7QUFDakMsZ0JBQVFBLE9BQVI7QUFDRSxlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsUUFBTDs7QUFDQTs7QUFDRixlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsU0FBTDs7QUFDQTs7QUFDRixlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsV0FBTCxDQUFpQkwsUUFBakI7O0FBQ0E7QUFUSjtBQVdELE9BWkQ7QUFhRDs7OytCQUVVO0FBQ1QsY0FBTyxLQUFLSixDQUFaO0FBQ0UsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLQSxDQUFMLEdBQVMsR0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTtBQVpKO0FBY0Q7OztnQ0FFVztBQUNWLGNBQU8sS0FBS0EsQ0FBWjtBQUNFLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLQSxDQUFMLEdBQVMsR0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7QUFaSjtBQWNEOzs7Z0NBRVdJLFEsRUFBVTtBQUNwQixjQUFPLEtBQUtKLENBQVo7QUFDRSxhQUFLLEdBQUw7QUFDRSxlQUFLRCxDQUFMLEdBQVNXLElBQUksQ0FBQ0MsR0FBTCxDQUFTLEtBQUtaLENBQUwsR0FBUyxDQUFsQixFQUFxQkssUUFBUSxDQUFDTCxDQUE5QixDQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0QsQ0FBTCxHQUFTWSxJQUFJLENBQUNDLEdBQUwsQ0FBUyxLQUFLYixDQUFMLEdBQVMsQ0FBbEIsRUFBcUJNLFFBQVEsQ0FBQ04sQ0FBOUIsQ0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtDLENBQUwsR0FBU1csSUFBSSxDQUFDRSxHQUFMLENBQVMsS0FBS2IsQ0FBTCxHQUFTLENBQWxCLEVBQXFCLENBQXJCLENBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLRCxDQUFMLEdBQVNZLElBQUksQ0FBQ0UsR0FBTCxDQUFTLEtBQUtkLENBQUwsR0FBUSxDQUFqQixFQUFvQixDQUFwQixDQUFUO0FBQ0E7QUFaSjtBQWNEOzs7OztlQUdZRCxLIiwic291cmNlUm9vdCI6Ii9ob21lL2RlZWEvY29kZS9kZWVhL1Byb2plY3RzL3Rob3VnaHQtd29ya3Mvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUm92ZXIge1xuICBjb25zdHJ1Y3Rvcih4LCB5LCBvLCBpbnN0cnVjdGlvbnMgPSBbXSkge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLm8gPSBvO1xuICAgIHRoaXMuc2V0SW5zdHJ1Y3Rpb25zKGluc3RydWN0aW9ucyk7XG4gIH1cblxuICBzZXRJbnN0cnVjdGlvbnMoaW5zdHJ1Y3Rpb25zKSB7XG4gICAgdGhpcy5jb21tYW5kcyA9IGluc3RydWN0aW9ucztcbiAgfVxuXG4gIG1vdmVzKHBsYXRmb3JtKSB7XG4gICAgdGhpcy5jb21tYW5kcy5mb3JFYWNoKChjb21tYW5kKSA9PiB7XG4gICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcbiAgICAgICAgY2FzZSAnTCc6XG4gICAgICAgICAgdGhpcy50dXJuTGVmdCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdSJzpcbiAgICAgICAgICB0aGlzLnR1cm5SaWdodCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdNJzpcbiAgICAgICAgICB0aGlzLm1vdmVGb3J3YXJkKHBsYXRmb3JtKVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdHVybkxlZnQoKSB7XG4gICAgc3dpdGNoKHRoaXMubykge1xuICAgICAgY2FzZSAnTic6XG4gICAgICAgIHRoaXMubyA9ICdXJ1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0UnOlxuICAgICAgICB0aGlzLm8gPSAnTidcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdTJzpcbiAgICAgICAgdGhpcy5vID0gJ0UnXG4gICAgICAgIGJyZWFrOyBcbiAgICAgIGNhc2UgJ1cnOlxuICAgICAgICB0aGlzLm8gPSAnUydcbiAgICAgICAgYnJlYWs7IFxuICAgIH1cbiAgfVxuXG4gIHR1cm5SaWdodCgpIHtcbiAgICBzd2l0Y2godGhpcy5vKSB7XG4gICAgICBjYXNlICdOJzpcbiAgICAgICAgdGhpcy5vID0gJ0UnXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnRSc6XG4gICAgICAgIHRoaXMubyA9ICdTJ1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1MnOlxuICAgICAgICB0aGlzLm8gPSAnVydcbiAgICAgICAgYnJlYWs7IFxuICAgICAgY2FzZSAnVyc6XG4gICAgICAgIHRoaXMubyA9ICdOJ1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBtb3ZlRm9yd2FyZChwbGF0Zm9ybSkge1xuICAgIHN3aXRjaCh0aGlzLm8pIHtcbiAgICAgIGNhc2UgJ04nOlxuICAgICAgICB0aGlzLnkgPSBNYXRoLm1pbih0aGlzLnkgKyAxLCBwbGF0Zm9ybS55KVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0UnOlxuICAgICAgICB0aGlzLnggPSBNYXRoLm1pbih0aGlzLnggKyAxLCBwbGF0Zm9ybS54KVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1MnOlxuICAgICAgICB0aGlzLnkgPSBNYXRoLm1heCh0aGlzLnkgLSAxLCAwKVxuICAgICAgICBicmVhazsgXG4gICAgICBjYXNlICdXJzpcbiAgICAgICAgdGhpcy54ID0gTWF0aC5tYXgodGhpcy54IC0xLCAwKVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm92ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Rover.js"
      ],
      "names": [
        "Rover",
        "x",
        "y",
        "o",
        "instructions",
        "setInstructions",
        "commands",
        "platform",
        "forEach",
        "command",
        "turnLeft",
        "turnRight",
        "moveForward",
        "Math",
        "min",
        "max"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,K;;;AACJ,iBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAwC;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;AAAA;AACtC,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,eAAL,CAAqBD,YAArB;AACD;;;;oCAEeA,Y,EAAc;AAC5B,WAAKE,QAAL,GAAgBF,YAAhB;AACD;;;0BAEKG,Q,EAAU;AAAA;;AACd,WAAKD,QAAL,CAAcE,OAAd,CAAsB,UAACC,OAAD,EAAa;AACjC,gBAAQA,OAAR;AACE,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,QAAL;;AACA;;AACF,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,SAAL;;AACA;;AACF,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,WAAL,CAAiBL,QAAjB;;AACA;AATJ;AAWD,OAZD;AAaD;;;+BAEU;AACT,cAAO,KAAKJ,CAAZ;AACE,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;AAZJ;AAcD;;;gCAEW;AACV,cAAO,KAAKA,CAAZ;AACE,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;AAZJ;AAcD;;;gCAEWI,Q,EAAU;AACpB,cAAO,KAAKJ,CAAZ;AACE,aAAK,GAAL;AACE,eAAKD,CAAL,GAASW,IAAI,CAACC,GAAL,CAAS,KAAKZ,CAAL,GAAS,CAAlB,EAAqBK,QAAQ,CAACL,CAA9B,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKD,CAAL,GAASY,IAAI,CAACC,GAAL,CAAS,KAAKb,CAAL,GAAS,CAAlB,EAAqBM,QAAQ,CAACN,CAA9B,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKC,CAAL,GAASW,IAAI,CAACE,GAAL,CAAS,KAAKb,CAAL,GAAS,CAAlB,EAAqB,CAArB,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKD,CAAL,GAASY,IAAI,CAACE,GAAL,CAAS,KAAKd,CAAL,GAAQ,CAAjB,EAAoB,CAApB,CAAT;AACA;AAZJ;AAcD;;;;;eAGYD,K",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "sourcesContent": [
        "class Rover {\n  constructor(x, y, o, instructions = []) {\n    this.x = x;\n    this.y = y;\n    this.o = o;\n    this.setInstructions(instructions);\n  }\n\n  setInstructions(instructions) {\n    this.commands = instructions;\n  }\n\n  moves(platform) {\n    this.commands.forEach((command) => {\n      switch (command) {\n        case 'L':\n          this.turnLeft();\n          break;\n        case 'R':\n          this.turnRight();\n          break;\n        case 'M':\n          this.moveForward(platform)\n          break;\n      }\n    });\n  }\n\n  turnLeft() {\n    switch(this.o) {\n      case 'N':\n        this.o = 'W'\n        break;\n      case 'E':\n        this.o = 'N'\n        break;\n      case 'S':\n        this.o = 'E'\n        break; \n      case 'W':\n        this.o = 'S'\n        break; \n    }\n  }\n\n  turnRight() {\n    switch(this.o) {\n      case 'N':\n        this.o = 'E'\n        break;\n      case 'E':\n        this.o = 'S'\n        break;\n      case 'S':\n        this.o = 'W'\n        break; \n      case 'W':\n        this.o = 'N'\n        break;\n    }\n  }\n\n  moveForward(platform) {\n    switch(this.o) {\n      case 'N':\n        this.y = Math.min(this.y + 1, platform.y)\n        break;\n      case 'E':\n        this.x = Math.min(this.x + 1, platform.x)\n        break;\n      case 'S':\n        this.y = Math.max(this.y - 1, 0)\n        break; \n      case 'W':\n        this.x = Math.max(this.x -1, 0)\n        break;\n    }\n  }\n}\n\nexport default Rover;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574634319115
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/Platform.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
        "sourceFileName": "Platform.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Platform =\n/*#__PURE__*/\nfunction () {\n  function Platform(x, y) {\n    (0, _classCallCheck2[\"default\"])(this, Platform);\n\n    if (x <= 0 || y <= 0) {\n      throw new Error('Coordinates need to be greater than 0');\n    }\n\n    this.x = x;\n    this.y = y;\n    this.rovers = [];\n  }\n\n  (0, _createClass2[\"default\"])(Platform, [{\n    key: \"addRover\",\n    value: function addRover(rover) {\n      this.rovers.push(rover);\n    }\n  }, {\n    key: \"moveRovers\",\n    value: function moveRovers() {\n      var _this = this;\n\n      this.rovers.forEach(function (rover) {\n        rover.moves(_this);\n      });\n    }\n  }, {\n    key: \"isOutside\",\n    value: function isOutside(x, y) {\n      return x > this.x || y > this.y || x < 0 || y < 0;\n    }\n  }]);\n  return Platform;\n}();\n\nvar _default = Platform;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXRmb3JtLmpzIl0sIm5hbWVzIjpbIlBsYXRmb3JtIiwieCIsInkiLCJFcnJvciIsInJvdmVycyIsInJvdmVyIiwicHVzaCIsImZvckVhY2giLCJtb3ZlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztJQUFNQSxROzs7QUFDSixvQkFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQUE7O0FBQ2hCLFFBQUlELENBQUMsSUFBSSxDQUFMLElBQVVDLENBQUMsSUFBSSxDQUFuQixFQUFzQjtBQUNwQixZQUFNLElBQUlDLEtBQUosQ0FBVSx1Q0FBVixDQUFOO0FBQ0Q7O0FBQ0QsU0FBS0YsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsU0FBS0MsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsU0FBS0UsTUFBTCxHQUFjLEVBQWQ7QUFDRDs7Ozs2QkFFUUMsSyxFQUFPO0FBQ2QsV0FBS0QsTUFBTCxDQUFZRSxJQUFaLENBQWlCRCxLQUFqQjtBQUNEOzs7aUNBRVk7QUFBQTs7QUFDWCxXQUFLRCxNQUFMLENBQVlHLE9BQVosQ0FBb0IsVUFBQ0YsS0FBRCxFQUFXO0FBQzdCQSxRQUFBQSxLQUFLLENBQUNHLEtBQU4sQ0FBWSxLQUFaO0FBQ0QsT0FGRDtBQUdEOzs7OEJBRVNQLEMsRUFBR0MsQyxFQUFHO0FBQ2QsYUFBU0QsQ0FBQyxHQUFHLEtBQUtBLENBQVQsSUFBY0MsQ0FBQyxHQUFHLEtBQUtBLENBQXhCLElBQStCRCxDQUFDLEdBQUcsQ0FBSixJQUFTQyxDQUFDLEdBQUcsQ0FBcEQ7QUFDRDs7Ozs7ZUFHWUYsUSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kZWVhL2NvZGUvZGVlYS9Qcm9qZWN0cy90aG91Z2h0LXdvcmtzL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBsYXRmb3JtIHtcbiAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgIGlmICh4IDw9IDAgfHwgeSA8PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nvb3JkaW5hdGVzIG5lZWQgdG8gYmUgZ3JlYXRlciB0aGFuIDAnKTtcbiAgICB9XG4gICAgdGhpcy54ID0geDtcbiAgICB0aGlzLnkgPSB5O1xuICAgIHRoaXMucm92ZXJzID0gW107XG4gIH1cblxuICBhZGRSb3Zlcihyb3Zlcikge1xuICAgIHRoaXMucm92ZXJzLnB1c2gocm92ZXIpO1xuICB9XG5cbiAgbW92ZVJvdmVycygpIHtcbiAgICB0aGlzLnJvdmVycy5mb3JFYWNoKChyb3ZlcikgPT4ge1xuICAgICAgcm92ZXIubW92ZXModGhpcyk7XG4gICAgfSk7XG4gIH1cblxuICBpc091dHNpZGUoeCwgeSkge1xuICAgIHJldHVybiAoKHggPiB0aGlzLnggfHwgeSA+IHRoaXMueSkgfHwgKHggPCAwIHx8IHkgPCAwKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxhdGZvcm07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Platform.js"
      ],
      "names": [
        "Platform",
        "x",
        "y",
        "Error",
        "rovers",
        "rover",
        "push",
        "forEach",
        "moves"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,Q;;;AACJ,oBAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAAA;;AAChB,QAAID,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAnB,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,MAAL,GAAc,EAAd;AACD;;;;6BAEQC,K,EAAO;AACd,WAAKD,MAAL,CAAYE,IAAZ,CAAiBD,KAAjB;AACD;;;iCAEY;AAAA;;AACX,WAAKD,MAAL,CAAYG,OAAZ,CAAoB,UAACF,KAAD,EAAW;AAC7BA,QAAAA,KAAK,CAACG,KAAN,CAAY,KAAZ;AACD,OAFD;AAGD;;;8BAESP,C,EAAGC,C,EAAG;AACd,aAASD,CAAC,GAAG,KAAKA,CAAT,IAAcC,CAAC,GAAG,KAAKA,CAAxB,IAA+BD,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAApD;AACD;;;;;eAGYF,Q",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "sourcesContent": [
        "class Platform {\n  constructor(x, y) {\n    if (x <= 0 || y <= 0) {\n      throw new Error('Coordinates need to be greater than 0');\n    }\n    this.x = x;\n    this.y = y;\n    this.rovers = [];\n  }\n\n  addRover(rover) {\n    this.rovers.push(rover);\n  }\n\n  moveRovers() {\n    this.rovers.forEach((rover) => {\n      rover.moves(this);\n    });\n  }\n\n  isOutside(x, y) {\n    return ((x > this.x || y > this.y) || (x < 0 || y < 0));\n  }\n}\n\nexport default Platform;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574634846511
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _roverCreation = _interopRequireDefault(require(\"./src/cli/roverCreation\"));\n\nvar _platformCreation = _interopRequireDefault(require(\"./src/cli/platformCreation\"));\n\nvar _additionalRoverCreation = _interopRequireDefault(require(\"./src/cli/additionalRoverCreation\"));\n\nvar platform = (0, _platformCreation[\"default\"])();\n(0, _roverCreation[\"default\"])(platform);\n(0, _additionalRoverCreation[\"default\"])(platform);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBsYXRmb3JtIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLG1DQUFqQjtBQUVBLCtCQUFjQSxRQUFkO0FBRUEseUNBQW1CQSxRQUFuQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kZWVhL2NvZGUvZGVlYS9Qcm9qZWN0cy90aG91Z2h0LXdvcmtzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJvdmVyQ3JlYXRpb24gZnJvbSAnLi9zcmMvY2xpL3JvdmVyQ3JlYXRpb24nO1xuaW1wb3J0IHBsYXRmb3JtQ3JlYXRpb24gZnJvbSAnLi9zcmMvY2xpL3BsYXRmb3JtQ3JlYXRpb24nO1xuaW1wb3J0IGFza0ZvckFub3RoZXJSb3ZlciBmcm9tICcuL3NyYy9jbGkvYWRkaXRpb25hbFJvdmVyQ3JlYXRpb24nO1xuXG5jb25zdCBwbGF0Zm9ybSA9IHBsYXRmb3JtQ3JlYXRpb24oKTtcblxucm92ZXJDcmVhdGlvbihwbGF0Zm9ybSk7XG5cbmFza0ZvckFub3RoZXJSb3ZlcihwbGF0Zm9ybSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "platform"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,mCAAjB;AAEA,+BAAcA,QAAd;AAEA,yCAAmBA,QAAnB",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works",
      "sourcesContent": [
        "import roverCreation from './src/cli/roverCreation';\nimport platformCreation from './src/cli/platformCreation';\nimport askForAnotherRover from './src/cli/additionalRoverCreation';\n\nconst platform = platformCreation();\n\nroverCreation(platform);\n\naskForAnotherRover(platform);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574622628170
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src/cli\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/cli/roverCreation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/roverCreation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/cli/roverCreation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/roverCreation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
        "sourceFileName": "roverCreation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _Rover = _interopRequireDefault(require(\"../Rover\"));\n\nvar argsArray = function argsArray(answer) {\n  return answer.toUpperCase().trim().split(' ').map(function (x) {\n    return Number.isInteger(parseInt(x, 10)) ? parseInt(x, 10) : x;\n  });\n};\n\nvar createRover = function createRover(answer, platform) {\n  var _argsArray = argsArray(answer),\n      _argsArray2 = (0, _slicedToArray2[\"default\"])(_argsArray, 3),\n      x = _argsArray2[0],\n      y = _argsArray2[1],\n      direction = _argsArray2[2];\n\n  var directionArr = ['N', 'E', 'S', 'W'];\n\n  var checkDirection = function checkDirection() {\n    return directionArr.includes(direction);\n  };\n\n  if (Number.isInteger(x) && Number.isInteger(y) && checkDirection()) {\n    if (platform.isOutside(x, y)) {\n      console.log('Your rover coordinates are outside the platform');\n      return undefined;\n    }\n\n    return new _Rover[\"default\"](x, y, direction);\n  }\n\n  return undefined;\n};\n\nvar createInstructions = function createInstructions(answer) {\n  var instrArray = ['L', 'R', 'M'];\n  var instructions = answer.toUpperCase().trim().split('');\n  var checkInstructions = instructions.filter(function (x) {\n    return !instrArray.includes(x);\n  });\n\n  if (checkInstructions.length <= 0) {\n    return instructions;\n  }\n\n  return undefined;\n};\n\nvar roverCreation = function roverCreation(platform) {\n  var rover = createRover(_readlineSync[\"default\"].question('Please enter the rover coordinates and orientation (N, E, S, W) e.g. 1 3 N: '), platform);\n\n  while (rover === undefined) {\n    rover = createRover(_readlineSync[\"default\"].question('Please enter two numbers and the letter of orientation (either N, E, S, W) separated by a space: '), platform);\n  }\n\n  var roverInstructions = createInstructions(_readlineSync[\"default\"].question('Thank you, please enter the instructions for the rover e.g. MLMRMM: '));\n\n  while (roverInstructions === undefined) {\n    roverInstructions = createInstructions(_readlineSync[\"default\"].question('Please enter the instructions as L for left, R for right, M for moving forward: '));\n  }\n\n  rover.setInstructions(roverInstructions);\n  platform.addRover(rover);\n};\n\nvar _default = roverCreation;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdmVyQ3JlYXRpb24uanMiXSwibmFtZXMiOlsiYXJnc0FycmF5IiwiYW5zd2VyIiwidG9VcHBlckNhc2UiLCJ0cmltIiwic3BsaXQiLCJtYXAiLCJ4IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwicGFyc2VJbnQiLCJjcmVhdGVSb3ZlciIsInBsYXRmb3JtIiwieSIsImRpcmVjdGlvbiIsImRpcmVjdGlvbkFyciIsImNoZWNrRGlyZWN0aW9uIiwiaW5jbHVkZXMiLCJpc091dHNpZGUiLCJjb25zb2xlIiwibG9nIiwidW5kZWZpbmVkIiwiUm92ZXIiLCJjcmVhdGVJbnN0cnVjdGlvbnMiLCJpbnN0ckFycmF5IiwiaW5zdHJ1Y3Rpb25zIiwiY2hlY2tJbnN0cnVjdGlvbnMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJyb3ZlckNyZWF0aW9uIiwicm92ZXIiLCJyZWFkbGluZVN5bmMiLCJxdWVzdGlvbiIsInJvdmVySW5zdHJ1Y3Rpb25zIiwic2V0SW5zdHJ1Y3Rpb25zIiwiYWRkUm92ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsTUFBRDtBQUFBLFNBQ2hCQSxNQUFNLENBQUNDLFdBQVAsR0FBcUJDLElBQXJCLEdBQTRCQyxLQUE1QixDQUFrQyxHQUFsQyxFQUF1Q0MsR0FBdkMsQ0FBMkMsVUFBQ0MsQ0FBRDtBQUFBLFdBQVFDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsUUFBUSxDQUFDSCxDQUFELEVBQUksRUFBSixDQUF6QixJQUFxQ0csUUFBUSxDQUFDSCxDQUFELEVBQUksRUFBSixDQUE3QyxHQUF3REEsQ0FBaEU7QUFBQSxHQUEzQyxDQURnQjtBQUFBLENBQWxCOztBQUlBLElBQU1JLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNULE1BQUQsRUFBU1UsUUFBVCxFQUFzQjtBQUFBLG1CQUNkWCxTQUFTLENBQUNDLE1BQUQsQ0FESztBQUFBO0FBQUEsTUFDakNLLENBRGlDO0FBQUEsTUFDOUJNLENBRDhCO0FBQUEsTUFDM0JDLFNBRDJCOztBQUd4QyxNQUFNQyxZQUFZLEdBQUcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsQ0FBckI7O0FBQ0EsTUFBTUMsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQjtBQUFBLFdBQU1ELFlBQVksQ0FBQ0UsUUFBYixDQUFzQkgsU0FBdEIsQ0FBTjtBQUFBLEdBQXZCOztBQUVBLE1BQUlOLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkYsQ0FBakIsS0FBdUJDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkksQ0FBakIsQ0FBdkIsSUFBOENHLGNBQWMsRUFBaEUsRUFBb0U7QUFDbEUsUUFBSUosUUFBUSxDQUFDTSxTQUFULENBQW1CWCxDQUFuQixFQUFzQk0sQ0FBdEIsQ0FBSixFQUE4QjtBQUM1Qk0sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaURBQVo7QUFDQSxhQUFPQyxTQUFQO0FBQ0Q7O0FBQ0QsV0FBTyxJQUFJQyxpQkFBSixDQUFVZixDQUFWLEVBQWFNLENBQWIsRUFBZ0JDLFNBQWhCLENBQVA7QUFDRDs7QUFDRCxTQUFPTyxTQUFQO0FBQ0QsQ0FkRDs7QUFnQkEsSUFBTUUsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFxQixDQUFDckIsTUFBRCxFQUFZO0FBQ3JDLE1BQU1zQixVQUFVLEdBQUcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsQ0FBbkI7QUFDQSxNQUFNQyxZQUFZLEdBQUd2QixNQUFNLENBQUNDLFdBQVAsR0FBcUJDLElBQXJCLEdBQTRCQyxLQUE1QixDQUFrQyxFQUFsQyxDQUFyQjtBQUNBLE1BQU1xQixpQkFBaUIsR0FBR0QsWUFBWSxDQUFDRSxNQUFiLENBQW9CLFVBQUNwQixDQUFEO0FBQUEsV0FBTyxDQUFDaUIsVUFBVSxDQUFDUCxRQUFYLENBQW9CVixDQUFwQixDQUFSO0FBQUEsR0FBcEIsQ0FBMUI7O0FBRUEsTUFBSW1CLGlCQUFpQixDQUFDRSxNQUFsQixJQUE0QixDQUFoQyxFQUFtQztBQUNqQyxXQUFPSCxZQUFQO0FBQ0Q7O0FBQ0QsU0FBT0osU0FBUDtBQUNELENBVEQ7O0FBWUEsSUFBTVEsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDakIsUUFBRCxFQUFjO0FBQ2xDLE1BQUlrQixLQUFLLEdBQUduQixXQUFXLENBQUNvQix5QkFBYUMsUUFBYixDQUFzQiw4RUFBdEIsQ0FBRCxFQUF3R3BCLFFBQXhHLENBQXZCOztBQUVBLFNBQU9rQixLQUFLLEtBQUtULFNBQWpCLEVBQTRCO0FBQzFCUyxJQUFBQSxLQUFLLEdBQUduQixXQUFXLENBQUNvQix5QkFBYUMsUUFBYixDQUFzQixtR0FBdEIsQ0FBRCxFQUE2SHBCLFFBQTdILENBQW5CO0FBQ0Q7O0FBRUQsTUFBSXFCLGlCQUFpQixHQUFHVixrQkFBa0IsQ0FBQ1EseUJBQWFDLFFBQWIsQ0FBc0Isc0VBQXRCLENBQUQsQ0FBMUM7O0FBRUEsU0FBT0MsaUJBQWlCLEtBQUtaLFNBQTdCLEVBQXdDO0FBQ3RDWSxJQUFBQSxpQkFBaUIsR0FBR1Ysa0JBQWtCLENBQUNRLHlCQUFhQyxRQUFiLENBQXNCLGtGQUF0QixDQUFELENBQXRDO0FBQ0Q7O0FBRURGLEVBQUFBLEtBQUssQ0FBQ0ksZUFBTixDQUFzQkQsaUJBQXRCO0FBQ0FyQixFQUFBQSxRQUFRLENBQUN1QixRQUFULENBQWtCTCxLQUFsQjtBQUNELENBZkQ7O2VBaUJlRCxhIiwic291cmNlUm9vdCI6Ii9ob21lL2RlZWEvY29kZS9kZWVhL1Byb2plY3RzL3Rob3VnaHQtd29ya3Mvc3JjL2NsaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZWFkbGluZVN5bmMgZnJvbSAncmVhZGxpbmUtc3luYyc7XG5pbXBvcnQgUm92ZXIgZnJvbSAnLi4vUm92ZXInO1xuXG5cbmNvbnN0IGFyZ3NBcnJheSA9IChhbnN3ZXIpID0+IChcbiAgYW5zd2VyLnRvVXBwZXJDYXNlKCkudHJpbSgpLnNwbGl0KCcgJykubWFwKCh4KSA9PiAoTnVtYmVyLmlzSW50ZWdlcihwYXJzZUludCh4LCAxMCkpID8gKHBhcnNlSW50KHgsIDEwKSkgOiB4KSlcbik7XG5cbmNvbnN0IGNyZWF0ZVJvdmVyID0gKGFuc3dlciwgcGxhdGZvcm0pID0+IHtcbiAgY29uc3QgW3gsIHksIGRpcmVjdGlvbl0gPSBhcmdzQXJyYXkoYW5zd2VyKTtcblxuICBjb25zdCBkaXJlY3Rpb25BcnIgPSBbJ04nLCAnRScsICdTJywgJ1cnXTtcbiAgY29uc3QgY2hlY2tEaXJlY3Rpb24gPSAoKSA9PiBkaXJlY3Rpb25BcnIuaW5jbHVkZXMoZGlyZWN0aW9uKTtcblxuICBpZiAoTnVtYmVyLmlzSW50ZWdlcih4KSAmJiBOdW1iZXIuaXNJbnRlZ2VyKHkpICYmIGNoZWNrRGlyZWN0aW9uKCkpIHtcbiAgICBpZiAocGxhdGZvcm0uaXNPdXRzaWRlKHgsIHkpKSB7XG4gICAgICBjb25zb2xlLmxvZygnWW91ciByb3ZlciBjb29yZGluYXRlcyBhcmUgb3V0c2lkZSB0aGUgcGxhdGZvcm0nKTtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUm92ZXIoeCwgeSwgZGlyZWN0aW9uKTtcbiAgfVxuICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuY29uc3QgY3JlYXRlSW5zdHJ1Y3Rpb25zID0gKGFuc3dlcikgPT4ge1xuICBjb25zdCBpbnN0ckFycmF5ID0gWydMJywgJ1InLCAnTSddO1xuICBjb25zdCBpbnN0cnVjdGlvbnMgPSBhbnN3ZXIudG9VcHBlckNhc2UoKS50cmltKCkuc3BsaXQoJycpO1xuICBjb25zdCBjaGVja0luc3RydWN0aW9ucyA9IGluc3RydWN0aW9ucy5maWx0ZXIoKHgpID0+ICFpbnN0ckFycmF5LmluY2x1ZGVzKHgpKTtcblxuICBpZiAoY2hlY2tJbnN0cnVjdGlvbnMubGVuZ3RoIDw9IDApIHtcbiAgICByZXR1cm4gaW5zdHJ1Y3Rpb25zO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG5cbmNvbnN0IHJvdmVyQ3JlYXRpb24gPSAocGxhdGZvcm0pID0+IHtcbiAgbGV0IHJvdmVyID0gY3JlYXRlUm92ZXIocmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdQbGVhc2UgZW50ZXIgdGhlIHJvdmVyIGNvb3JkaW5hdGVzIGFuZCBvcmllbnRhdGlvbiAoTiwgRSwgUywgVykgZS5nLiAxIDMgTjogJyksIHBsYXRmb3JtKTtcblxuICB3aGlsZSAocm92ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgIHJvdmVyID0gY3JlYXRlUm92ZXIocmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdQbGVhc2UgZW50ZXIgdHdvIG51bWJlcnMgYW5kIHRoZSBsZXR0ZXIgb2Ygb3JpZW50YXRpb24gKGVpdGhlciBOLCBFLCBTLCBXKSBzZXBhcmF0ZWQgYnkgYSBzcGFjZTogJyksIHBsYXRmb3JtKTtcbiAgfVxuXG4gIGxldCByb3Zlckluc3RydWN0aW9ucyA9IGNyZWF0ZUluc3RydWN0aW9ucyhyZWFkbGluZVN5bmMucXVlc3Rpb24oJ1RoYW5rIHlvdSwgcGxlYXNlIGVudGVyIHRoZSBpbnN0cnVjdGlvbnMgZm9yIHRoZSByb3ZlciBlLmcuIE1MTVJNTTogJykpO1xuXG4gIHdoaWxlIChyb3Zlckluc3RydWN0aW9ucyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcm92ZXJJbnN0cnVjdGlvbnMgPSBjcmVhdGVJbnN0cnVjdGlvbnMocmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdQbGVhc2UgZW50ZXIgdGhlIGluc3RydWN0aW9ucyBhcyBMIGZvciBsZWZ0LCBSIGZvciByaWdodCwgTSBmb3IgbW92aW5nIGZvcndhcmQ6ICcpKTtcbiAgfVxuXG4gIHJvdmVyLnNldEluc3RydWN0aW9ucyhyb3Zlckluc3RydWN0aW9ucyk7XG4gIHBsYXRmb3JtLmFkZFJvdmVyKHJvdmVyKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHJvdmVyQ3JlYXRpb247XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "roverCreation.js"
      ],
      "names": [
        "argsArray",
        "answer",
        "toUpperCase",
        "trim",
        "split",
        "map",
        "x",
        "Number",
        "isInteger",
        "parseInt",
        "createRover",
        "platform",
        "y",
        "direction",
        "directionArr",
        "checkDirection",
        "includes",
        "isOutside",
        "console",
        "log",
        "undefined",
        "Rover",
        "createInstructions",
        "instrArray",
        "instructions",
        "checkInstructions",
        "filter",
        "length",
        "roverCreation",
        "rover",
        "readlineSync",
        "question",
        "roverInstructions",
        "setInstructions",
        "addRover"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AACA;;AAGA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAChBA,MAAM,CAACC,WAAP,GAAqBC,IAArB,GAA4BC,KAA5B,CAAkC,GAAlC,EAAuCC,GAAvC,CAA2C,UAACC,CAAD;AAAA,WAAQC,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACH,CAAD,EAAI,EAAJ,CAAzB,IAAqCG,QAAQ,CAACH,CAAD,EAAI,EAAJ,CAA7C,GAAwDA,CAAhE;AAAA,GAA3C,CADgB;AAAA,CAAlB;;AAIA,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACT,MAAD,EAASU,QAAT,EAAsB;AAAA,mBACdX,SAAS,CAACC,MAAD,CADK;AAAA;AAAA,MACjCK,CADiC;AAAA,MAC9BM,CAD8B;AAAA,MAC3BC,SAD2B;;AAGxC,MAAMC,YAAY,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAArB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAMD,YAAY,CAACE,QAAb,CAAsBH,SAAtB,CAAN;AAAA,GAAvB;;AAEA,MAAIN,MAAM,CAACC,SAAP,CAAiBF,CAAjB,KAAuBC,MAAM,CAACC,SAAP,CAAiBI,CAAjB,CAAvB,IAA8CG,cAAc,EAAhE,EAAoE;AAClE,QAAIJ,QAAQ,CAACM,SAAT,CAAmBX,CAAnB,EAAsBM,CAAtB,CAAJ,EAA8B;AAC5BM,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACA,aAAOC,SAAP;AACD;;AACD,WAAO,IAAIC,iBAAJ,CAAUf,CAAV,EAAaM,CAAb,EAAgBC,SAAhB,CAAP;AACD;;AACD,SAAOO,SAAP;AACD,CAdD;;AAgBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACrB,MAAD,EAAY;AACrC,MAAMsB,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;AACA,MAAMC,YAAY,GAAGvB,MAAM,CAACC,WAAP,GAAqBC,IAArB,GAA4BC,KAA5B,CAAkC,EAAlC,CAArB;AACA,MAAMqB,iBAAiB,GAAGD,YAAY,CAACE,MAAb,CAAoB,UAACpB,CAAD;AAAA,WAAO,CAACiB,UAAU,CAACP,QAAX,CAAoBV,CAApB,CAAR;AAAA,GAApB,CAA1B;;AAEA,MAAImB,iBAAiB,CAACE,MAAlB,IAA4B,CAAhC,EAAmC;AACjC,WAAOH,YAAP;AACD;;AACD,SAAOJ,SAAP;AACD,CATD;;AAYA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACjB,QAAD,EAAc;AAClC,MAAIkB,KAAK,GAAGnB,WAAW,CAACoB,yBAAaC,QAAb,CAAsB,8EAAtB,CAAD,EAAwGpB,QAAxG,CAAvB;;AAEA,SAAOkB,KAAK,KAAKT,SAAjB,EAA4B;AAC1BS,IAAAA,KAAK,GAAGnB,WAAW,CAACoB,yBAAaC,QAAb,CAAsB,mGAAtB,CAAD,EAA6HpB,QAA7H,CAAnB;AACD;;AAED,MAAIqB,iBAAiB,GAAGV,kBAAkB,CAACQ,yBAAaC,QAAb,CAAsB,sEAAtB,CAAD,CAA1C;;AAEA,SAAOC,iBAAiB,KAAKZ,SAA7B,EAAwC;AACtCY,IAAAA,iBAAiB,GAAGV,kBAAkB,CAACQ,yBAAaC,QAAb,CAAsB,kFAAtB,CAAD,CAAtC;AACD;;AAEDF,EAAAA,KAAK,CAACI,eAAN,CAAsBD,iBAAtB;AACArB,EAAAA,QAAQ,CAACuB,QAAT,CAAkBL,KAAlB;AACD,CAfD;;eAiBeD,a",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\nimport Rover from '../Rover';\n\n\nconst argsArray = (answer) => (\n  answer.toUpperCase().trim().split(' ').map((x) => (Number.isInteger(parseInt(x, 10)) ? (parseInt(x, 10)) : x))\n);\n\nconst createRover = (answer, platform) => {\n  const [x, y, direction] = argsArray(answer);\n\n  const directionArr = ['N', 'E', 'S', 'W'];\n  const checkDirection = () => directionArr.includes(direction);\n\n  if (Number.isInteger(x) && Number.isInteger(y) && checkDirection()) {\n    if (platform.isOutside(x, y)) {\n      console.log('Your rover coordinates are outside the platform');\n      return undefined;\n    }\n    return new Rover(x, y, direction);\n  }\n  return undefined;\n};\n\nconst createInstructions = (answer) => {\n  const instrArray = ['L', 'R', 'M'];\n  const instructions = answer.toUpperCase().trim().split('');\n  const checkInstructions = instructions.filter((x) => !instrArray.includes(x));\n\n  if (checkInstructions.length <= 0) {\n    return instructions;\n  }\n  return undefined;\n};\n\n\nconst roverCreation = (platform) => {\n  let rover = createRover(readlineSync.question('Please enter the rover coordinates and orientation (N, E, S, W) e.g. 1 3 N: '), platform);\n\n  while (rover === undefined) {\n    rover = createRover(readlineSync.question('Please enter two numbers and the letter of orientation (either N, E, S, W) separated by a space: '), platform);\n  }\n\n  let roverInstructions = createInstructions(readlineSync.question('Thank you, please enter the instructions for the rover e.g. MLMRMM: '));\n\n  while (roverInstructions === undefined) {\n    roverInstructions = createInstructions(readlineSync.question('Please enter the instructions as L for left, R for right, M for moving forward: '));\n  }\n\n  rover.setInstructions(roverInstructions);\n  platform.addRover(rover);\n};\n\nexport default roverCreation;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574631318174
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/Rover.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/Rover.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
        "sourceFileName": "Rover.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Rover =\n/*#__PURE__*/\nfunction () {\n  function Rover(x, y, o) {\n    var instructions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    (0, _classCallCheck2[\"default\"])(this, Rover);\n    this.x = x;\n    this.y = y;\n    this.o = o;\n    this.setInstructions(instructions);\n  }\n\n  (0, _createClass2[\"default\"])(Rover, [{\n    key: \"setInstructions\",\n    value: function setInstructions(instructions) {\n      this.commands = instructions;\n    }\n  }, {\n    key: \"moves\",\n    value: function moves(platform) {\n      var _this = this;\n\n      this.commands.forEach(function (command) {\n        switch (command) {\n          case 'L':\n            _this.turnLeft();\n\n            break;\n\n          case 'R':\n            _this.turnRight();\n\n            break;\n\n          case 'M':\n            _this.moveForward(platform);\n\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"turnLeft\",\n    value: function turnLeft() {\n      switch (this.o) {\n        case 'N':\n          this.o = 'W';\n          break;\n\n        case 'E':\n          this.o = 'N';\n          break;\n\n        case 'S':\n          this.o = 'E';\n          break;\n\n        case 'W':\n          this.o = 'S';\n          break;\n      }\n    }\n  }, {\n    key: \"turnRight\",\n    value: function turnRight() {\n      switch (this.o) {\n        case 'N':\n          this.o = 'E';\n          break;\n\n        case 'E':\n          this.o = 'S';\n          break;\n\n        case 'S':\n          this.o = 'W';\n          break;\n\n        case 'W':\n          this.o = 'N';\n          break;\n      }\n    }\n  }, {\n    key: \"moveForward\",\n    value: function moveForward(platform) {\n      switch (this.o) {\n        case 'N':\n          this.y = Math.min(this.y + 1, platform.y);\n          break;\n\n        case 'E':\n          this.x = Math.min(this.x + 1, platform.x);\n          break;\n\n        case 'S':\n          this.y = Math.max(this.y - 1, 0);\n          break;\n\n        case 'W':\n          this.x = Math.max(this.x - 1, 0);\n          break;\n      }\n    }\n  }]);\n  return Rover;\n}();\n\nvar _default = Rover;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdmVyLmpzIl0sIm5hbWVzIjpbIlJvdmVyIiwieCIsInkiLCJvIiwiaW5zdHJ1Y3Rpb25zIiwic2V0SW5zdHJ1Y3Rpb25zIiwiY29tbWFuZHMiLCJwbGF0Zm9ybSIsImZvckVhY2giLCJjb21tYW5kIiwidHVybkxlZnQiLCJ0dXJuUmlnaHQiLCJtb3ZlRm9yd2FyZCIsIk1hdGgiLCJtaW4iLCJtYXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBTUEsSzs7O0FBQ0osaUJBQVlDLENBQVosRUFBZUMsQ0FBZixFQUFrQkMsQ0FBbEIsRUFBd0M7QUFBQSxRQUFuQkMsWUFBbUIsdUVBQUosRUFBSTtBQUFBO0FBQ3RDLFNBQUtILENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtDLENBQUwsR0FBU0EsQ0FBVDtBQUNBLFNBQUtFLGVBQUwsQ0FBcUJELFlBQXJCO0FBQ0Q7Ozs7b0NBRWVBLFksRUFBYztBQUM1QixXQUFLRSxRQUFMLEdBQWdCRixZQUFoQjtBQUNEOzs7MEJBRUtHLFEsRUFBVTtBQUFBOztBQUNkLFdBQUtELFFBQUwsQ0FBY0UsT0FBZCxDQUFzQixVQUFDQyxPQUFELEVBQWE7QUFDakMsZ0JBQVFBLE9BQVI7QUFDRSxlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsUUFBTDs7QUFDQTs7QUFDRixlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsU0FBTDs7QUFDQTs7QUFDRixlQUFLLEdBQUw7QUFDRSxZQUFBLEtBQUksQ0FBQ0MsV0FBTCxDQUFpQkwsUUFBakI7O0FBQ0E7QUFUSjtBQVdELE9BWkQ7QUFhRDs7OytCQUVVO0FBQ1QsY0FBTyxLQUFLSixDQUFaO0FBQ0UsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLQSxDQUFMLEdBQVMsR0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTtBQVpKO0FBY0Q7OztnQ0FFVztBQUNWLGNBQU8sS0FBS0EsQ0FBWjtBQUNFLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0EsQ0FBTCxHQUFTLEdBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLQSxDQUFMLEdBQVMsR0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtBLENBQUwsR0FBUyxHQUFUO0FBQ0E7QUFaSjtBQWNEOzs7Z0NBRVdJLFEsRUFBVTtBQUNwQixjQUFPLEtBQUtKLENBQVo7QUFDRSxhQUFLLEdBQUw7QUFDRSxlQUFLRCxDQUFMLEdBQVNXLElBQUksQ0FBQ0MsR0FBTCxDQUFTLEtBQUtaLENBQUwsR0FBUyxDQUFsQixFQUFxQkssUUFBUSxDQUFDTCxDQUE5QixDQUFUO0FBQ0E7O0FBQ0YsYUFBSyxHQUFMO0FBQ0UsZUFBS0QsQ0FBTCxHQUFTWSxJQUFJLENBQUNDLEdBQUwsQ0FBUyxLQUFLYixDQUFMLEdBQVMsQ0FBbEIsRUFBcUJNLFFBQVEsQ0FBQ04sQ0FBOUIsQ0FBVDtBQUNBOztBQUNGLGFBQUssR0FBTDtBQUNFLGVBQUtDLENBQUwsR0FBU1csSUFBSSxDQUFDRSxHQUFMLENBQVMsS0FBS2IsQ0FBTCxHQUFTLENBQWxCLEVBQXFCLENBQXJCLENBQVQ7QUFDQTs7QUFDRixhQUFLLEdBQUw7QUFDRSxlQUFLRCxDQUFMLEdBQVNZLElBQUksQ0FBQ0UsR0FBTCxDQUFTLEtBQUtkLENBQUwsR0FBUSxDQUFqQixFQUFvQixDQUFwQixDQUFUO0FBQ0E7QUFaSjtBQWNEOzs7OztlQUdZRCxLIiwic291cmNlUm9vdCI6Ii9ob21lL2RlZWEvY29kZS9kZWVhL1Byb2plY3RzL3Rob3VnaHQtd29ya3Mvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgUm92ZXIge1xuICBjb25zdHJ1Y3Rvcih4LCB5LCBvLCBpbnN0cnVjdGlvbnMgPSBbXSkge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLm8gPSBvO1xuICAgIHRoaXMuc2V0SW5zdHJ1Y3Rpb25zKGluc3RydWN0aW9ucyk7XG4gIH1cblxuICBzZXRJbnN0cnVjdGlvbnMoaW5zdHJ1Y3Rpb25zKSB7XG4gICAgdGhpcy5jb21tYW5kcyA9IGluc3RydWN0aW9ucztcbiAgfVxuXG4gIG1vdmVzKHBsYXRmb3JtKSB7XG4gICAgdGhpcy5jb21tYW5kcy5mb3JFYWNoKChjb21tYW5kKSA9PiB7XG4gICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcbiAgICAgICAgY2FzZSAnTCc6XG4gICAgICAgICAgdGhpcy50dXJuTGVmdCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdSJzpcbiAgICAgICAgICB0aGlzLnR1cm5SaWdodCgpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdNJzpcbiAgICAgICAgICB0aGlzLm1vdmVGb3J3YXJkKHBsYXRmb3JtKVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdHVybkxlZnQoKSB7XG4gICAgc3dpdGNoKHRoaXMubykge1xuICAgICAgY2FzZSAnTic6XG4gICAgICAgIHRoaXMubyA9ICdXJ1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0UnOlxuICAgICAgICB0aGlzLm8gPSAnTidcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdTJzpcbiAgICAgICAgdGhpcy5vID0gJ0UnXG4gICAgICAgIGJyZWFrOyBcbiAgICAgIGNhc2UgJ1cnOlxuICAgICAgICB0aGlzLm8gPSAnUydcbiAgICAgICAgYnJlYWs7IFxuICAgIH1cbiAgfVxuXG4gIHR1cm5SaWdodCgpIHtcbiAgICBzd2l0Y2godGhpcy5vKSB7XG4gICAgICBjYXNlICdOJzpcbiAgICAgICAgdGhpcy5vID0gJ0UnXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnRSc6XG4gICAgICAgIHRoaXMubyA9ICdTJ1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1MnOlxuICAgICAgICB0aGlzLm8gPSAnVydcbiAgICAgICAgYnJlYWs7IFxuICAgICAgY2FzZSAnVyc6XG4gICAgICAgIHRoaXMubyA9ICdOJ1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBtb3ZlRm9yd2FyZChwbGF0Zm9ybSkge1xuICAgIHN3aXRjaCh0aGlzLm8pIHtcbiAgICAgIGNhc2UgJ04nOlxuICAgICAgICB0aGlzLnkgPSBNYXRoLm1pbih0aGlzLnkgKyAxLCBwbGF0Zm9ybS55KVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0UnOlxuICAgICAgICB0aGlzLnggPSBNYXRoLm1pbih0aGlzLnggKyAxLCBwbGF0Zm9ybS54KVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1MnOlxuICAgICAgICB0aGlzLnkgPSBNYXRoLm1heCh0aGlzLnkgLSAxLCAwKVxuICAgICAgICBicmVhazsgXG4gICAgICBjYXNlICdXJzpcbiAgICAgICAgdGhpcy54ID0gTWF0aC5tYXgodGhpcy54IC0xLCAwKVxuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm92ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Rover.js"
      ],
      "names": [
        "Rover",
        "x",
        "y",
        "o",
        "instructions",
        "setInstructions",
        "commands",
        "platform",
        "forEach",
        "command",
        "turnLeft",
        "turnRight",
        "moveForward",
        "Math",
        "min",
        "max"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,K;;;AACJ,iBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAwC;AAAA,QAAnBC,YAAmB,uEAAJ,EAAI;AAAA;AACtC,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,eAAL,CAAqBD,YAArB;AACD;;;;oCAEeA,Y,EAAc;AAC5B,WAAKE,QAAL,GAAgBF,YAAhB;AACD;;;0BAEKG,Q,EAAU;AAAA;;AACd,WAAKD,QAAL,CAAcE,OAAd,CAAsB,UAACC,OAAD,EAAa;AACjC,gBAAQA,OAAR;AACE,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,QAAL;;AACA;;AACF,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,SAAL;;AACA;;AACF,eAAK,GAAL;AACE,YAAA,KAAI,CAACC,WAAL,CAAiBL,QAAjB;;AACA;AATJ;AAWD,OAZD;AAaD;;;+BAEU;AACT,cAAO,KAAKJ,CAAZ;AACE,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;AAZJ;AAcD;;;gCAEW;AACV,cAAO,KAAKA,CAAZ;AACE,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKA,CAAL,GAAS,GAAT;AACA;AAZJ;AAcD;;;gCAEWI,Q,EAAU;AACpB,cAAO,KAAKJ,CAAZ;AACE,aAAK,GAAL;AACE,eAAKD,CAAL,GAASW,IAAI,CAACC,GAAL,CAAS,KAAKZ,CAAL,GAAS,CAAlB,EAAqBK,QAAQ,CAACL,CAA9B,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKD,CAAL,GAASY,IAAI,CAACC,GAAL,CAAS,KAAKb,CAAL,GAAS,CAAlB,EAAqBM,QAAQ,CAACN,CAA9B,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKC,CAAL,GAASW,IAAI,CAACE,GAAL,CAAS,KAAKb,CAAL,GAAS,CAAlB,EAAqB,CAArB,CAAT;AACA;;AACF,aAAK,GAAL;AACE,eAAKD,CAAL,GAASY,IAAI,CAACE,GAAL,CAAS,KAAKd,CAAL,GAAQ,CAAjB,EAAoB,CAApB,CAAT;AACA;AAZJ;AAcD;;;;;eAGYD,K",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "sourcesContent": [
        "class Rover {\n  constructor(x, y, o, instructions = []) {\n    this.x = x;\n    this.y = y;\n    this.o = o;\n    this.setInstructions(instructions);\n  }\n\n  setInstructions(instructions) {\n    this.commands = instructions;\n  }\n\n  moves(platform) {\n    this.commands.forEach((command) => {\n      switch (command) {\n        case 'L':\n          this.turnLeft();\n          break;\n        case 'R':\n          this.turnRight();\n          break;\n        case 'M':\n          this.moveForward(platform)\n          break;\n      }\n    });\n  }\n\n  turnLeft() {\n    switch(this.o) {\n      case 'N':\n        this.o = 'W'\n        break;\n      case 'E':\n        this.o = 'N'\n        break;\n      case 'S':\n        this.o = 'E'\n        break; \n      case 'W':\n        this.o = 'S'\n        break; \n    }\n  }\n\n  turnRight() {\n    switch(this.o) {\n      case 'N':\n        this.o = 'E'\n        break;\n      case 'E':\n        this.o = 'S'\n        break;\n      case 'S':\n        this.o = 'W'\n        break; \n      case 'W':\n        this.o = 'N'\n        break;\n    }\n  }\n\n  moveForward(platform) {\n    switch(this.o) {\n      case 'N':\n        this.y = Math.min(this.y + 1, platform.y)\n        break;\n      case 'E':\n        this.x = Math.min(this.x + 1, platform.x)\n        break;\n      case 'S':\n        this.y = Math.max(this.y - 1, 0)\n        break; \n      case 'W':\n        this.x = Math.max(this.x -1, 0)\n        break;\n    }\n  }\n}\n\nexport default Rover;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574634319115
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src/cli\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/cli/platformCreation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/platformCreation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/cli/platformCreation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/platformCreation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
        "sourceFileName": "platformCreation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _Platform = _interopRequireDefault(require(\"../Platform\"));\n\nvar argsArray = function argsArray(answer) {\n  return answer.trim().split(' ').map(function (x) {\n    return parseInt(x, 10);\n  });\n};\n\nvar createPlatform = function createPlatform(answer) {\n  var _argsArray = argsArray(answer),\n      _argsArray2 = (0, _slicedToArray2[\"default\"])(_argsArray, 2),\n      x = _argsArray2[0],\n      y = _argsArray2[1];\n\n  if (Number.isInteger(x) && Number.isInteger(y)) {\n    var platform = new _Platform[\"default\"](x, y);\n    return platform;\n  }\n\n  return undefined;\n};\n\nvar platformCreation = function platformCreation() {\n  var platform = createPlatform(_readlineSync[\"default\"].question('Enter the platform coordinates e.g. 5 5: '));\n\n  while (platform === undefined) {\n    platform = createPlatform(_readlineSync[\"default\"].question('Please enter two numbers separated by a space as per the example: '));\n  }\n\n  console.log(\"Thank you, your platform is \".concat(platform.x, \" wide and \").concat(platform.y, \" tall\"));\n  return platform;\n};\n\nvar _default = platformCreation;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXRmb3JtQ3JlYXRpb24uanMiXSwibmFtZXMiOlsiYXJnc0FycmF5IiwiYW5zd2VyIiwidHJpbSIsInNwbGl0IiwibWFwIiwieCIsInBhcnNlSW50IiwiY3JlYXRlUGxhdGZvcm0iLCJ5IiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwicGxhdGZvcm0iLCJQbGF0Zm9ybSIsInVuZGVmaW5lZCIsInBsYXRmb3JtQ3JlYXRpb24iLCJyZWFkbGluZVN5bmMiLCJxdWVzdGlvbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsTUFBRDtBQUFBLFNBQ2hCQSxNQUFNLENBQUNDLElBQVAsR0FBY0MsS0FBZCxDQUFvQixHQUFwQixFQUF5QkMsR0FBekIsQ0FBNkIsVUFBQ0MsQ0FBRDtBQUFBLFdBQU9DLFFBQVEsQ0FBQ0QsQ0FBRCxFQUFJLEVBQUosQ0FBZjtBQUFBLEdBQTdCLENBRGdCO0FBQUEsQ0FBbEI7O0FBSUEsSUFBTUUsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixDQUFDTixNQUFELEVBQVk7QUFBQSxtQkFDbEJELFNBQVMsQ0FBQ0MsTUFBRCxDQURTO0FBQUE7QUFBQSxNQUMxQkksQ0FEMEI7QUFBQSxNQUN2QkcsQ0FEdUI7O0FBR2pDLE1BQUlDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkwsQ0FBakIsS0FBdUJJLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkYsQ0FBakIsQ0FBM0IsRUFBZ0Q7QUFDOUMsUUFBTUcsUUFBUSxHQUFHLElBQUlDLG9CQUFKLENBQWFQLENBQWIsRUFBZ0JHLENBQWhCLENBQWpCO0FBQ0EsV0FBT0csUUFBUDtBQUNEOztBQUNELFNBQU9FLFNBQVA7QUFDRCxDQVJEOztBQVVBLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUM3QixNQUFJSCxRQUFRLEdBQUdKLGNBQWMsQ0FBQ1EseUJBQWFDLFFBQWIsQ0FBc0IsMkNBQXRCLENBQUQsQ0FBN0I7O0FBRUEsU0FBT0wsUUFBUSxLQUFLRSxTQUFwQixFQUErQjtBQUM3QkYsSUFBQUEsUUFBUSxHQUFHSixjQUFjLENBQUNRLHlCQUFhQyxRQUFiLENBQXNCLG9FQUF0QixDQUFELENBQXpCO0FBQ0Q7O0FBQ0RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix1Q0FBMkNQLFFBQVEsQ0FBQ04sQ0FBcEQsdUJBQWtFTSxRQUFRLENBQUNILENBQTNFO0FBQ0EsU0FBT0csUUFBUDtBQUNELENBUkQ7O2VBVWVHLGdCIiwic291cmNlUm9vdCI6Ii9ob21lL2RlZWEvY29kZS9kZWVhL1Byb2plY3RzL3Rob3VnaHQtd29ya3Mvc3JjL2NsaSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZWFkbGluZVN5bmMgZnJvbSAncmVhZGxpbmUtc3luYyc7XG5pbXBvcnQgUGxhdGZvcm0gZnJvbSAnLi4vUGxhdGZvcm0nO1xuXG5jb25zdCBhcmdzQXJyYXkgPSAoYW5zd2VyKSA9PiAoXG4gIGFuc3dlci50cmltKCkuc3BsaXQoJyAnKS5tYXAoKHgpID0+IHBhcnNlSW50KHgsIDEwKSlcbik7XG5cbmNvbnN0IGNyZWF0ZVBsYXRmb3JtID0gKGFuc3dlcikgPT4ge1xuICBjb25zdCBbeCwgeV0gPSBhcmdzQXJyYXkoYW5zd2VyKTtcblxuICBpZiAoTnVtYmVyLmlzSW50ZWdlcih4KSAmJiBOdW1iZXIuaXNJbnRlZ2VyKHkpKSB7XG4gICAgY29uc3QgcGxhdGZvcm0gPSBuZXcgUGxhdGZvcm0oeCwgeSk7XG4gICAgcmV0dXJuIHBsYXRmb3JtO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG5jb25zdCBwbGF0Zm9ybUNyZWF0aW9uID0gKCkgPT4ge1xuICBsZXQgcGxhdGZvcm0gPSBjcmVhdGVQbGF0Zm9ybShyZWFkbGluZVN5bmMucXVlc3Rpb24oJ0VudGVyIHRoZSBwbGF0Zm9ybSBjb29yZGluYXRlcyBlLmcuIDUgNTogJykpO1xuXG4gIHdoaWxlIChwbGF0Zm9ybSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcGxhdGZvcm0gPSBjcmVhdGVQbGF0Zm9ybShyZWFkbGluZVN5bmMucXVlc3Rpb24oJ1BsZWFzZSBlbnRlciB0d28gbnVtYmVycyBzZXBhcmF0ZWQgYnkgYSBzcGFjZSBhcyBwZXIgdGhlIGV4YW1wbGU6ICcpKTtcbiAgfVxuICBjb25zb2xlLmxvZyhgVGhhbmsgeW91LCB5b3VyIHBsYXRmb3JtIGlzICR7cGxhdGZvcm0ueH0gd2lkZSBhbmQgJHtwbGF0Zm9ybS55fSB0YWxsYCk7XG4gIHJldHVybiBwbGF0Zm9ybTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBsYXRmb3JtQ3JlYXRpb247XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "platformCreation.js"
      ],
      "names": [
        "argsArray",
        "answer",
        "trim",
        "split",
        "map",
        "x",
        "parseInt",
        "createPlatform",
        "y",
        "Number",
        "isInteger",
        "platform",
        "Platform",
        "undefined",
        "platformCreation",
        "readlineSync",
        "question",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD;AAAA,SAChBA,MAAM,CAACC,IAAP,GAAcC,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,CAA6B,UAACC,CAAD;AAAA,WAAOC,QAAQ,CAACD,CAAD,EAAI,EAAJ,CAAf;AAAA,GAA7B,CADgB;AAAA,CAAlB;;AAIA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACN,MAAD,EAAY;AAAA,mBAClBD,SAAS,CAACC,MAAD,CADS;AAAA;AAAA,MAC1BI,CAD0B;AAAA,MACvBG,CADuB;;AAGjC,MAAIC,MAAM,CAACC,SAAP,CAAiBL,CAAjB,KAAuBI,MAAM,CAACC,SAAP,CAAiBF,CAAjB,CAA3B,EAAgD;AAC9C,QAAMG,QAAQ,GAAG,IAAIC,oBAAJ,CAAaP,CAAb,EAAgBG,CAAhB,CAAjB;AACA,WAAOG,QAAP;AACD;;AACD,SAAOE,SAAP;AACD,CARD;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAIH,QAAQ,GAAGJ,cAAc,CAACQ,yBAAaC,QAAb,CAAsB,2CAAtB,CAAD,CAA7B;;AAEA,SAAOL,QAAQ,KAAKE,SAApB,EAA+B;AAC7BF,IAAAA,QAAQ,GAAGJ,cAAc,CAACQ,yBAAaC,QAAb,CAAsB,oEAAtB,CAAD,CAAzB;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,uCAA2CP,QAAQ,CAACN,CAApD,uBAAkEM,QAAQ,CAACH,CAA3E;AACA,SAAOG,QAAP;AACD,CARD;;eAUeG,gB",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\nimport Platform from '../Platform';\n\nconst argsArray = (answer) => (\n  answer.trim().split(' ').map((x) => parseInt(x, 10))\n);\n\nconst createPlatform = (answer) => {\n  const [x, y] = argsArray(answer);\n\n  if (Number.isInteger(x) && Number.isInteger(y)) {\n    const platform = new Platform(x, y);\n    return platform;\n  }\n  return undefined;\n};\n\nconst platformCreation = () => {\n  let platform = createPlatform(readlineSync.question('Enter the platform coordinates e.g. 5 5: '));\n\n  while (platform === undefined) {\n    platform = createPlatform(readlineSync.question('Please enter two numbers separated by a space as per the example: '));\n  }\n  console.log(`Thank you, your platform is ${platform.x} wide and ${platform.y} tall`);\n  return platform;\n};\n\nexport default platformCreation;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574623885792
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/Platform.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/Platform.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
        "sourceFileName": "Platform.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Platform =\n/*#__PURE__*/\nfunction () {\n  function Platform(x, y) {\n    (0, _classCallCheck2[\"default\"])(this, Platform);\n\n    if (x <= 0 || y <= 0) {\n      throw new Error('Coordinates need to be greater than 0');\n    }\n\n    this.x = x;\n    this.y = y;\n    this.rovers = [];\n  }\n\n  (0, _createClass2[\"default\"])(Platform, [{\n    key: \"addRover\",\n    value: function addRover(rover) {\n      this.rovers.push(rover);\n    }\n  }, {\n    key: \"moveRovers\",\n    value: function moveRovers() {\n      var _this = this;\n\n      this.rovers.forEach(function (rover) {\n        rover.moves(_this);\n      });\n    }\n  }, {\n    key: \"isOutside\",\n    value: function isOutside(x, y) {\n      return x > this.x || y > this.y || x < 0 || y < 0;\n    }\n  }]);\n  return Platform;\n}();\n\nvar _default = Platform;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXRmb3JtLmpzIl0sIm5hbWVzIjpbIlBsYXRmb3JtIiwieCIsInkiLCJFcnJvciIsInJvdmVycyIsInJvdmVyIiwicHVzaCIsImZvckVhY2giLCJtb3ZlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztJQUFNQSxROzs7QUFDSixvQkFBWUMsQ0FBWixFQUFlQyxDQUFmLEVBQWtCO0FBQUE7O0FBQ2hCLFFBQUlELENBQUMsSUFBSSxDQUFMLElBQVVDLENBQUMsSUFBSSxDQUFuQixFQUFzQjtBQUNwQixZQUFNLElBQUlDLEtBQUosQ0FBVSx1Q0FBVixDQUFOO0FBQ0Q7O0FBQ0QsU0FBS0YsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsU0FBS0MsQ0FBTCxHQUFTQSxDQUFUO0FBQ0EsU0FBS0UsTUFBTCxHQUFjLEVBQWQ7QUFDRDs7Ozs2QkFFUUMsSyxFQUFPO0FBQ2QsV0FBS0QsTUFBTCxDQUFZRSxJQUFaLENBQWlCRCxLQUFqQjtBQUNEOzs7aUNBRVk7QUFBQTs7QUFDWCxXQUFLRCxNQUFMLENBQVlHLE9BQVosQ0FBb0IsVUFBQ0YsS0FBRCxFQUFXO0FBQzdCQSxRQUFBQSxLQUFLLENBQUNHLEtBQU4sQ0FBWSxLQUFaO0FBQ0QsT0FGRDtBQUdEOzs7OEJBRVNQLEMsRUFBR0MsQyxFQUFHO0FBQ2QsYUFBU0QsQ0FBQyxHQUFHLEtBQUtBLENBQVQsSUFBY0MsQ0FBQyxHQUFHLEtBQUtBLENBQXhCLElBQStCRCxDQUFDLEdBQUcsQ0FBSixJQUFTQyxDQUFDLEdBQUcsQ0FBcEQ7QUFDRDs7Ozs7ZUFHWUYsUSIsInNvdXJjZVJvb3QiOiIvaG9tZS9kZWVhL2NvZGUvZGVlYS9Qcm9qZWN0cy90aG91Z2h0LXdvcmtzL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBsYXRmb3JtIHtcbiAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgIGlmICh4IDw9IDAgfHwgeSA8PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nvb3JkaW5hdGVzIG5lZWQgdG8gYmUgZ3JlYXRlciB0aGFuIDAnKTtcbiAgICB9XG4gICAgdGhpcy54ID0geDtcbiAgICB0aGlzLnkgPSB5O1xuICAgIHRoaXMucm92ZXJzID0gW107XG4gIH1cblxuICBhZGRSb3Zlcihyb3Zlcikge1xuICAgIHRoaXMucm92ZXJzLnB1c2gocm92ZXIpO1xuICB9XG5cbiAgbW92ZVJvdmVycygpIHtcbiAgICB0aGlzLnJvdmVycy5mb3JFYWNoKChyb3ZlcikgPT4ge1xuICAgICAgcm92ZXIubW92ZXModGhpcyk7XG4gICAgfSk7XG4gIH1cblxuICBpc091dHNpZGUoeCwgeSkge1xuICAgIHJldHVybiAoKHggPiB0aGlzLnggfHwgeSA+IHRoaXMueSkgfHwgKHggPCAwIHx8IHkgPCAwKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGxhdGZvcm07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Platform.js"
      ],
      "names": [
        "Platform",
        "x",
        "y",
        "Error",
        "rovers",
        "rover",
        "push",
        "forEach",
        "moves"
      ],
      "mappings": ";;;;;;;;;;;;;IAAMA,Q;;;AACJ,oBAAYC,CAAZ,EAAeC,CAAf,EAAkB;AAAA;;AAChB,QAAID,CAAC,IAAI,CAAL,IAAUC,CAAC,IAAI,CAAnB,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AACD,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,MAAL,GAAc,EAAd;AACD;;;;6BAEQC,K,EAAO;AACd,WAAKD,MAAL,CAAYE,IAAZ,CAAiBD,KAAjB;AACD;;;iCAEY;AAAA;;AACX,WAAKD,MAAL,CAAYG,OAAZ,CAAoB,UAACF,KAAD,EAAW;AAC7BA,QAAAA,KAAK,CAACG,KAAN,CAAY,KAAZ;AACD,OAFD;AAGD;;;8BAESP,C,EAAGC,C,EAAG;AACd,aAASD,CAAC,GAAG,KAAKA,CAAT,IAAcC,CAAC,GAAG,KAAKA,CAAxB,IAA+BD,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAApD;AACD;;;;;eAGYF,Q",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src",
      "sourcesContent": [
        "class Platform {\n  constructor(x, y) {\n    if (x <= 0 || y <= 0) {\n      throw new Error('Coordinates need to be greater than 0');\n    }\n    this.x = x;\n    this.y = y;\n    this.rovers = [];\n  }\n\n  addRover(rover) {\n    this.rovers.push(rover);\n  }\n\n  moveRovers() {\n    this.rovers.forEach((rover) => {\n      rover.moves(this);\n    });\n  }\n\n  isOutside(x, y) {\n    return ((x > this.x || y > this.y) || (x < 0 || y < 0));\n  }\n}\n\nexport default Platform;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574634846511
  },
  "{\"sourceRoot\":\"/home/deea/code/deea/Projects/thought-works/src/cli\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/deea/code/deea/Projects/thought-works\",\"filename\":\"/home/deea/code/deea/Projects/thought-works/src/cli/additionalRoverCreation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/deea/code/deea/Projects/thought-works\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/deea/code/deea/Projects/thought-works",
      "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/additionalRoverCreation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/deea/code/deea/Projects/thought-works",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/deea/code/deea/Projects/thought-works/src/cli/additionalRoverCreation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/deea/code/deea/Projects/thought-works/src/cli/additionalRoverCreation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
        "sourceFileName": "additionalRoverCreation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _readlineSync = _interopRequireDefault(require(\"readline-sync\"));\n\nvar _roverCreation = _interopRequireDefault(require(\"./roverCreation\"));\n\nvar askForAnotherRover = function askForAnotherRover(platform) {\n  var answer = 'Y';\n\n  while (answer.toUpperCase() !== 'N') {\n    answer = _readlineSync[\"default\"].question('Would you like to add another rover? Y/N: ');\n\n    if (answer.toUpperCase() === 'Y') {\n      (0, _roverCreation[\"default\"])(platform);\n    } else if (answer.toUpperCase() !== 'N') {\n      answer = _readlineSync[\"default\"].question('Please enter Y to create a new rover or N to see your rover(s) coordinates and exit: ');\n    }\n  }\n\n  platform.moveRovers();\n  console.log('Thank you!');\n  platform.rovers.forEach(function (r, index) {\n    console.log(\"Rover no.\".concat(index + 1, \" coordinates are: \").concat(r.x, \" \").concat(r.y, \" \").concat(r.o, \".\"));\n  });\n  console.log('Goodbye!');\n};\n\nvar _default = askForAnotherRover;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZGl0aW9uYWxSb3ZlckNyZWF0aW9uLmpzIl0sIm5hbWVzIjpbImFza0ZvckFub3RoZXJSb3ZlciIsInBsYXRmb3JtIiwiYW5zd2VyIiwidG9VcHBlckNhc2UiLCJyZWFkbGluZVN5bmMiLCJxdWVzdGlvbiIsIm1vdmVSb3ZlcnMiLCJjb25zb2xlIiwibG9nIiwicm92ZXJzIiwiZm9yRWFjaCIsInIiLCJpbmRleCIsIngiLCJ5IiwibyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFxQixDQUFDQyxRQUFELEVBQWM7QUFDdkMsTUFBSUMsTUFBTSxHQUFHLEdBQWI7O0FBQ0EsU0FBT0EsTUFBTSxDQUFDQyxXQUFQLE9BQXlCLEdBQWhDLEVBQXFDO0FBQ25DRCxJQUFBQSxNQUFNLEdBQUdFLHlCQUFhQyxRQUFiLENBQXNCLDRDQUF0QixDQUFUOztBQUNBLFFBQUlILE1BQU0sQ0FBQ0MsV0FBUCxPQUF5QixHQUE3QixFQUFrQztBQUNoQyxxQ0FBY0YsUUFBZDtBQUNELEtBRkQsTUFFTyxJQUFJQyxNQUFNLENBQUNDLFdBQVAsT0FBeUIsR0FBN0IsRUFBa0M7QUFDdkNELE1BQUFBLE1BQU0sR0FBR0UseUJBQWFDLFFBQWIsQ0FBc0IsdUZBQXRCLENBQVQ7QUFDRDtBQUNGOztBQUNESixFQUFBQSxRQUFRLENBQUNLLFVBQVQ7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWjtBQUNBUCxFQUFBQSxRQUFRLENBQUNRLE1BQVQsQ0FBZ0JDLE9BQWhCLENBQXdCLFVBQUNDLENBQUQsRUFBSUMsS0FBSixFQUFjO0FBQ3BDTCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsb0JBQXdCSSxLQUFLLEdBQUcsQ0FBaEMsK0JBQXNERCxDQUFDLENBQUNFLENBQXhELGNBQTZERixDQUFDLENBQUNHLENBQS9ELGNBQW9FSCxDQUFDLENBQUNJLENBQXRFO0FBQ0QsR0FGRDtBQUdBUixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaO0FBQ0QsQ0FoQkQ7O2VBa0JlUixrQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9kZWVhL2NvZGUvZGVlYS9Qcm9qZWN0cy90aG91Z2h0LXdvcmtzL3NyYy9jbGkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVhZGxpbmVTeW5jIGZyb20gJ3JlYWRsaW5lLXN5bmMnO1xuaW1wb3J0IHJvdmVyQ3JlYXRpb24gZnJvbSAnLi9yb3ZlckNyZWF0aW9uJztcblxuY29uc3QgYXNrRm9yQW5vdGhlclJvdmVyID0gKHBsYXRmb3JtKSA9PiB7XG4gIGxldCBhbnN3ZXIgPSAnWSc7XG4gIHdoaWxlIChhbnN3ZXIudG9VcHBlckNhc2UoKSAhPT0gJ04nKSB7XG4gICAgYW5zd2VyID0gcmVhZGxpbmVTeW5jLnF1ZXN0aW9uKCdXb3VsZCB5b3UgbGlrZSB0byBhZGQgYW5vdGhlciByb3Zlcj8gWS9OOiAnKTtcbiAgICBpZiAoYW5zd2VyLnRvVXBwZXJDYXNlKCkgPT09ICdZJykge1xuICAgICAgcm92ZXJDcmVhdGlvbihwbGF0Zm9ybSk7XG4gICAgfSBlbHNlIGlmIChhbnN3ZXIudG9VcHBlckNhc2UoKSAhPT0gJ04nKSB7XG4gICAgICBhbnN3ZXIgPSByZWFkbGluZVN5bmMucXVlc3Rpb24oJ1BsZWFzZSBlbnRlciBZIHRvIGNyZWF0ZSBhIG5ldyByb3ZlciBvciBOIHRvIHNlZSB5b3VyIHJvdmVyKHMpIGNvb3JkaW5hdGVzIGFuZCBleGl0OiAnKTtcbiAgICB9XG4gIH1cbiAgcGxhdGZvcm0ubW92ZVJvdmVycygpO1xuICBjb25zb2xlLmxvZygnVGhhbmsgeW91IScpO1xuICBwbGF0Zm9ybS5yb3ZlcnMuZm9yRWFjaCgociwgaW5kZXgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgUm92ZXIgbm8uJHtpbmRleCArIDF9IGNvb3JkaW5hdGVzIGFyZTogJHtyLnh9ICR7ci55fSAke3Iub30uYCk7XG4gIH0pO1xuICBjb25zb2xlLmxvZygnR29vZGJ5ZSEnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFza0ZvckFub3RoZXJSb3ZlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "additionalRoverCreation.js"
      ],
      "names": [
        "askForAnotherRover",
        "platform",
        "answer",
        "toUpperCase",
        "readlineSync",
        "question",
        "moveRovers",
        "console",
        "log",
        "rovers",
        "forEach",
        "r",
        "index",
        "x",
        "y",
        "o"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,MAAIC,MAAM,GAAG,GAAb;;AACA,SAAOA,MAAM,CAACC,WAAP,OAAyB,GAAhC,EAAqC;AACnCD,IAAAA,MAAM,GAAGE,yBAAaC,QAAb,CAAsB,4CAAtB,CAAT;;AACA,QAAIH,MAAM,CAACC,WAAP,OAAyB,GAA7B,EAAkC;AAChC,qCAAcF,QAAd;AACD,KAFD,MAEO,IAAIC,MAAM,CAACC,WAAP,OAAyB,GAA7B,EAAkC;AACvCD,MAAAA,MAAM,GAAGE,yBAAaC,QAAb,CAAsB,uFAAtB,CAAT;AACD;AACF;;AACDJ,EAAAA,QAAQ,CAACK,UAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAP,EAAAA,QAAQ,CAACQ,MAAT,CAAgBC,OAAhB,CAAwB,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACpCL,IAAAA,OAAO,CAACC,GAAR,oBAAwBI,KAAK,GAAG,CAAhC,+BAAsDD,CAAC,CAACE,CAAxD,cAA6DF,CAAC,CAACG,CAA/D,cAAoEH,CAAC,CAACI,CAAtE;AACD,GAFD;AAGAR,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,CAhBD;;eAkBeR,kB",
      "sourceRoot": "/home/deea/code/deea/Projects/thought-works/src/cli",
      "sourcesContent": [
        "import readlineSync from 'readline-sync';\nimport roverCreation from './roverCreation';\n\nconst askForAnotherRover = (platform) => {\n  let answer = 'Y';\n  while (answer.toUpperCase() !== 'N') {\n    answer = readlineSync.question('Would you like to add another rover? Y/N: ');\n    if (answer.toUpperCase() === 'Y') {\n      roverCreation(platform);\n    } else if (answer.toUpperCase() !== 'N') {\n      answer = readlineSync.question('Please enter Y to create a new rover or N to see your rover(s) coordinates and exit: ');\n    }\n  }\n  platform.moveRovers();\n  console.log('Thank you!');\n  platform.rovers.forEach((r, index) => {\n    console.log(`Rover no.${index + 1} coordinates are: ${r.x} ${r.y} ${r.o}.`);\n  });\n  console.log('Goodbye!');\n};\n\nexport default askForAnotherRover;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574624553335
  }
}